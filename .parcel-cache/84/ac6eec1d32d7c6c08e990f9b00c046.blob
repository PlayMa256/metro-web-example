var $b3fedc89a160c80e19af51a04573e43$exports = {};
$parcel$require("0b3fedc89a160c80e19af51a04573e43", "@babel/runtime/helpers/esm/toConsumableArray");
$parcel$require("0b3fedc89a160c80e19af51a04573e43", "@babel/runtime/helpers/esm/extends");
$parcel$require("0b3fedc89a160c80e19af51a04573e43", "@babel/runtime/helpers/esm/typeof");
$parcel$require("0b3fedc89a160c80e19af51a04573e43", "prop-types");
$parcel$require("0b3fedc89a160c80e19af51a04573e43", "./merge");
// The breakpoint **start** at this value.
// For instance with the first breakpoint xs: [xs, sm[.
var $b3fedc89a160c80e19af51a04573e43$var$values = {
  xs: 0,
  sm: 600,
  md: 960,
  lg: 1280,
  xl: 1920
};
var $b3fedc89a160c80e19af51a04573e43$var$defaultBreakpoints = {
  // Sorted ASC by size. That's important.
  // It can't be configured as it's used statically for propTypes.
  keys: ['xs', 'sm', 'md', 'lg', 'xl'],
  up: function up(key) {
    return "@media (min-width:".concat($b3fedc89a160c80e19af51a04573e43$var$values[key], "px)");
  }
};

function $b3fedc89a160c80e19af51a04573e43$export$handleBreakpoints(props, propValue, styleFromPropValue) {
  if ("production" !== 'production') {
    if (!props.theme) {
      console.error('@material-ui/system: you are calling a style function without a theme value.');
    }
  }

  if (Array.isArray(propValue)) {
    var themeBreakpoints = props.theme.breakpoints || $b3fedc89a160c80e19af51a04573e43$var$defaultBreakpoints;
    return propValue.reduce(function (acc, item, index) {
      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);
      return acc;
    }, {});
  }

  if ($b3fedc89a160c80e19af51a04573e43$import$_typeof(propValue) === 'object') {
    var _themeBreakpoints = props.theme.breakpoints || $b3fedc89a160c80e19af51a04573e43$var$defaultBreakpoints;

    return Object.keys(propValue).reduce(function (acc, breakpoint) {
      acc[_themeBreakpoints.up(breakpoint)] = styleFromPropValue(propValue[breakpoint]);
      return acc;
    }, {});
  }

  var output = styleFromPropValue(propValue);
  return output;
}

$b3fedc89a160c80e19af51a04573e43$exports.handleBreakpoints = $b3fedc89a160c80e19af51a04573e43$export$handleBreakpoints;

function $b3fedc89a160c80e19af51a04573e43$export$default(styleFunction) {
  var newStyleFunction = function newStyleFunction(props) {
    var base = styleFunction(props);
    var themeBreakpoints = props.theme.breakpoints || $b3fedc89a160c80e19af51a04573e43$var$defaultBreakpoints;
    var extended = themeBreakpoints.keys.reduce(function (acc, key) {
      if (props[key]) {
        acc = acc || {};
        acc[themeBreakpoints.up(key)] = styleFunction($b3fedc89a160c80e19af51a04573e43$import$_extends({
          theme: props.theme
        }, props[key]));
      }

      return acc;
    }, null);
    return $b3fedc89a160c80e19af51a04573e43$import$merge(base, extended);
  };

  newStyleFunction.propTypes = "production" !== 'production' ? $b3fedc89a160c80e19af51a04573e43$import$_extends({}, styleFunction.propTypes, {
    xs: $b3fedc89a160c80e19af51a04573e43$import$PropTypes.object,
    sm: $b3fedc89a160c80e19af51a04573e43$import$PropTypes.object,
    md: $b3fedc89a160c80e19af51a04573e43$import$PropTypes.object,
    lg: $b3fedc89a160c80e19af51a04573e43$import$PropTypes.object,
    xl: $b3fedc89a160c80e19af51a04573e43$import$PropTypes.object
  }) : {};
  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl'].concat($b3fedc89a160c80e19af51a04573e43$import$_toConsumableArray(styleFunction.filterProps));
  return newStyleFunction;
}

$b3fedc89a160c80e19af51a04573e43$exports.default = $b3fedc89a160c80e19af51a04573e43$export$default;