var $d691bb15e73243ef903d26b650d56dc5$exports = {};
$parcel$require("d691bb15e73243ef903d26b650d56dc5", "prop-types");
$parcel$require("d691bb15e73243ef903d26b650d56dc5", "@material-ui/utils");
$parcel$require("d691bb15e73243ef903d26b650d56dc5", "../withWidth");
$parcel$require("d691bb15e73243ef903d26b650d56dc5", "../styles/useTheme");

/**
 * @ignore - internal component.
 */
function $d691bb15e73243ef903d26b650d56dc5$var$HiddenJs(props) {
  var children = props.children,
      only = props.only,
      width = props.width;
  var theme = $d691bb15e73243ef903d26b650d56dc5$import$useTheme();
  var visible = true; // `only` check is faster to get out sooner if used.

  if (only) {
    if (Array.isArray(only)) {
      for (var i = 0; i < only.length; i += 1) {
        var breakpoint = only[i];

        if (width === breakpoint) {
          visible = false;
          break;
        }
      }
    } else if (only && width === only) {
      visible = false;
    }
  } // Allow `only` to be combined with other props. If already hidden, no need to check others.


  if (visible) {
    // determine visibility based on the smallest size up
    for (var _i = 0; _i < theme.breakpoints.keys.length; _i += 1) {
      var _breakpoint = theme.breakpoints.keys[_i];
      var breakpointUp = props["".concat(_breakpoint, "Up")];
      var breakpointDown = props["".concat(_breakpoint, "Down")];

      if (breakpointUp && $d691bb15e73243ef903d26b650d56dc5$import$isWidthUp(_breakpoint, width) || breakpointDown && $d691bb15e73243ef903d26b650d56dc5$import$isWidthDown(_breakpoint, width)) {
        visible = false;
        break;
      }
    }
  }

  if (!visible) {
    return null;
  }

  return children;
}

$d691bb15e73243ef903d26b650d56dc5$var$HiddenJs.propTypes = {
  /**
   * The content of the component.
   */
  children: $d691bb15e73243ef903d26b650d56dc5$import$PropTypes.node,

  /**
   * @ignore
   */
  className: $d691bb15e73243ef903d26b650d56dc5$import$PropTypes.string,

  /**
   * Specify which implementation to use.  'js' is the default, 'css' works better for
   * server-side rendering.
   */
  implementation: $d691bb15e73243ef903d26b650d56dc5$import$PropTypes.oneOf(['js', 'css']),

  /**
   * You can use this prop when choosing the `js` implementation with server-side rendering.
   *
   * As `window.innerWidth` is unavailable on the server,
   * we default to rendering an empty component during the first mount.
   * You might want to use an heuristic to approximate
   * the screen width of the client browser screen width.
   *
   * For instance, you could be using the user-agent or the client-hints.
   * https://caniuse.com/#search=client%20hint
   */
  initialWidth: $d691bb15e73243ef903d26b650d56dc5$import$PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),

  /**
   * If true, screens this size and down will be hidden.
   */
  lgDown: $d691bb15e73243ef903d26b650d56dc5$import$PropTypes.bool,

  /**
   * If true, screens this size and up will be hidden.
   */
  lgUp: $d691bb15e73243ef903d26b650d56dc5$import$PropTypes.bool,

  /**
   * If true, screens this size and down will be hidden.
   */
  mdDown: $d691bb15e73243ef903d26b650d56dc5$import$PropTypes.bool,

  /**
   * If true, screens this size and up will be hidden.
   */
  mdUp: $d691bb15e73243ef903d26b650d56dc5$import$PropTypes.bool,

  /**
   * Hide the given breakpoint(s).
   */
  only: $d691bb15e73243ef903d26b650d56dc5$import$PropTypes.oneOfType([$d691bb15e73243ef903d26b650d56dc5$import$PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), $d691bb15e73243ef903d26b650d56dc5$import$PropTypes.arrayOf($d691bb15e73243ef903d26b650d56dc5$import$PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),

  /**
   * If true, screens this size and down will be hidden.
   */
  smDown: $d691bb15e73243ef903d26b650d56dc5$import$PropTypes.bool,

  /**
   * If true, screens this size and up will be hidden.
   */
  smUp: $d691bb15e73243ef903d26b650d56dc5$import$PropTypes.bool,

  /**
   * @ignore
   * width prop provided by withWidth decorator.
   */
  width: $d691bb15e73243ef903d26b650d56dc5$import$PropTypes.string.isRequired,

  /**
   * If true, screens this size and down will be hidden.
   */
  xlDown: $d691bb15e73243ef903d26b650d56dc5$import$PropTypes.bool,

  /**
   * If true, screens this size and up will be hidden.
   */
  xlUp: $d691bb15e73243ef903d26b650d56dc5$import$PropTypes.bool,

  /**
   * If true, screens this size and down will be hidden.
   */
  xsDown: $d691bb15e73243ef903d26b650d56dc5$import$PropTypes.bool,

  /**
   * If true, screens this size and up will be hidden.
   */
  xsUp: $d691bb15e73243ef903d26b650d56dc5$import$PropTypes.bool
};

if ("production" !== 'production') {
  $d691bb15e73243ef903d26b650d56dc5$var$HiddenJs.propTypes = $d691bb15e73243ef903d26b650d56dc5$import$exactProp($d691bb15e73243ef903d26b650d56dc5$var$HiddenJs.propTypes);
}

var $d691bb15e73243ef903d26b650d56dc5$export$default = $d691bb15e73243ef903d26b650d56dc5$import$withWidth()($d691bb15e73243ef903d26b650d56dc5$var$HiddenJs);
$d691bb15e73243ef903d26b650d56dc5$exports.default = $d691bb15e73243ef903d26b650d56dc5$export$default;