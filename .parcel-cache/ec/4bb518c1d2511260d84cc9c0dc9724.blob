var $c2cf539fc0a7b212f8765df1e45cee0$exports = {};
$parcel$require("6c2cf539fc0a7b212f8765df1e45cee0", "@babel/runtime/helpers/esm/objectWithoutProperties");
$parcel$require("6c2cf539fc0a7b212f8765df1e45cee0", "@babel/runtime/helpers/esm/extends");
$parcel$require("6c2cf539fc0a7b212f8765df1e45cee0", "react");
$parcel$require("6c2cf539fc0a7b212f8765df1e45cee0", "prop-types");
$parcel$require("6c2cf539fc0a7b212f8765df1e45cee0", "clsx");
$parcel$require("6c2cf539fc0a7b212f8765df1e45cee0", "../styles/withStyles");
$parcel$require("6c2cf539fc0a7b212f8765df1e45cee0", "../utils/capitalize");
$parcel$require("6c2cf539fc0a7b212f8765df1e45cee0", "../styles/colorManipulator");
$parcel$require("6c2cf539fc0a7b212f8765df1e45cee0", "../Table/TableContext");
$parcel$require("6c2cf539fc0a7b212f8765df1e45cee0", "../Table/Tablelvl2Context");

var $c2cf539fc0a7b212f8765df1e45cee0$export$styles = function styles(theme) {
  return {
    /* Styles applied to the root element. */
    root: $c2cf539fc0a7b212f8765df1e45cee0$import$_extends({}, theme.typography.body2, {
      display: 'table-cell',
      verticalAlign: 'inherit',
      // Workaround for a rendering bug with spanned columns in Chrome 62.0.
      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.
      borderBottom: "1px solid\n    ".concat(theme.palette.type === 'light' ? $c2cf539fc0a7b212f8765df1e45cee0$import$lighten($c2cf539fc0a7b212f8765df1e45cee0$import$fade(theme.palette.divider, 1), 0.88) : $c2cf539fc0a7b212f8765df1e45cee0$import$darken($c2cf539fc0a7b212f8765df1e45cee0$import$fade(theme.palette.divider, 1), 0.68)),
      textAlign: 'left',
      padding: 16
    }),

    /* Styles applied to the root element if `variant="head"` or `context.table.head`. */
    head: {
      color: theme.palette.text.primary,
      lineHeight: theme.typography.pxToRem(24),
      fontWeight: theme.typography.fontWeightMedium
    },

    /* Styles applied to the root element if `variant="body"` or `context.table.body`. */
    body: {
      color: theme.palette.text.primary
    },

    /* Styles applied to the root element if `variant="footer"` or `context.table.footer`. */
    footer: {
      color: theme.palette.text.secondary,
      lineHeight: theme.typography.pxToRem(21),
      fontSize: theme.typography.pxToRem(12)
    },

    /* Styles applied to the root element if `size="small"`. */
    sizeSmall: {
      padding: '6px 24px 6px 16px',
      '&:last-child': {
        paddingRight: 16
      },
      '&$paddingCheckbox': {
        width: 24,
        // prevent the checkbox column from growing
        padding: '0px 12px 0 16px',
        '&:last-child': {
          paddingLeft: 12,
          paddingRight: 16
        },
        '& > *': {
          padding: 0
        }
      }
    },

    /* Styles applied to the root element if `padding="checkbox"`. */
    paddingCheckbox: {
      width: 48,
      // prevent the checkbox column from growing
      padding: '0 0 0 4px',
      '&:last-child': {
        paddingLeft: 0,
        paddingRight: 4
      }
    },

    /* Styles applied to the root element if `padding="none"`. */
    paddingNone: {
      padding: 0,
      '&:last-child': {
        padding: 0
      }
    },

    /* Styles applied to the root element if `align="left"`. */
    alignLeft: {
      textAlign: 'left'
    },

    /* Styles applied to the root element if `align="center"`. */
    alignCenter: {
      textAlign: 'center'
    },

    /* Styles applied to the root element if `align="right"`. */
    alignRight: {
      textAlign: 'right',
      flexDirection: 'row-reverse'
    },

    /* Styles applied to the root element if `align="justify"`. */
    alignJustify: {
      textAlign: 'justify'
    },

    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */
    stickyHeader: {
      position: 'sticky',
      top: 0,
      left: 0,
      zIndex: 1,
      backgroundColor: theme.palette.background.default
    }
  };
};

$c2cf539fc0a7b212f8765df1e45cee0$exports.styles = $c2cf539fc0a7b212f8765df1e45cee0$export$styles;
var $c2cf539fc0a7b212f8765df1e45cee0$var$TableCell = $c2cf539fc0a7b212f8765df1e45cee0$import$React.forwardRef(function TableCell(props, ref) {
  var _props$align = props.align,
      align = _props$align === void 0 ? 'inherit' : _props$align,
      classes = props.classes,
      className = props.className,
      component = props.component,
      paddingProp = props.padding,
      scopeProp = props.scope,
      sizeProp = props.size,
      sortDirection = props.sortDirection,
      variantProp = props.variant,
      other = $c2cf539fc0a7b212f8765df1e45cee0$import$_objectWithoutProperties(props, ["align", "classes", "className", "component", "padding", "scope", "size", "sortDirection", "variant"]);
  var table = $c2cf539fc0a7b212f8765df1e45cee0$import$React.useContext($c2cf539fc0a7b212f8765df1e45cee0$import$TableContext);
  var tablelvl2 = $c2cf539fc0a7b212f8765df1e45cee0$import$React.useContext($c2cf539fc0a7b212f8765df1e45cee0$import$Tablelvl2Context);
  var Component;

  if (component) {
    Component = component;
  } else {
    Component = tablelvl2 && tablelvl2.variant === 'head' ? 'th' : 'td';
  }

  var scope = scopeProp;

  if (!scope && tablelvl2 && tablelvl2.variant === 'head') {
    scope = 'col';
  }

  var padding = paddingProp || (table && table.padding ? table.padding : 'default');
  var size = sizeProp || (table && table.size ? table.size : 'medium');
  var variant = variantProp || tablelvl2 && tablelvl2.variant;
  var ariaSort = null;

  if (sortDirection) {
    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';
  }

  return $c2cf539fc0a7b212f8765df1e45cee0$import$React.createElement(Component, $c2cf539fc0a7b212f8765df1e45cee0$import$_extends({
    ref: ref,
    className: $c2cf539fc0a7b212f8765df1e45cee0$import$clsx(classes.root, className, align !== 'inherit' && classes["align".concat($c2cf539fc0a7b212f8765df1e45cee0$import$capitalize(align))], padding !== 'default' && classes["padding".concat($c2cf539fc0a7b212f8765df1e45cee0$import$capitalize(padding))], size !== 'medium' && classes["size".concat($c2cf539fc0a7b212f8765df1e45cee0$import$capitalize(size))], {
      head: [classes.head, table && table.stickyHeader && classes.stickyHeader],
      body: classes.body,
      footer: classes.footer
    }[variant]),
    "aria-sort": ariaSort,
    scope: scope
  }, other));
});
"production" !== "production" ? $c2cf539fc0a7b212f8765df1e45cee0$var$TableCell.propTypes = {
  /**
   * Set the text-align on the table cell content.
   *
   * Monetary or generally number fields **should be right aligned** as that allows
   * you to add them up quickly in your head without having to worry about decimals.
   */
  align: $c2cf539fc0a7b212f8765df1e45cee0$import$PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),

  /**
   * The table cell contents.
   */
  children: $c2cf539fc0a7b212f8765df1e45cee0$import$PropTypes.node,

  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: $c2cf539fc0a7b212f8765df1e45cee0$import$PropTypes.object.isRequired,

  /**
   * @ignore
   */
  className: $c2cf539fc0a7b212f8765df1e45cee0$import$PropTypes.string,

  /**
   * The component used for the root node.
   * Either a string to use a DOM element or a component.
   */
  component: $c2cf539fc0a7b212f8765df1e45cee0$import$PropTypes.elementType,

  /**
   * Sets the padding applied to the cell.
   * By default, the Table parent component set the value (`default`).
   */
  padding: $c2cf539fc0a7b212f8765df1e45cee0$import$PropTypes.oneOf(['default', 'checkbox', 'none']),

  /**
   * Set scope attribute.
   */
  scope: $c2cf539fc0a7b212f8765df1e45cee0$import$PropTypes.string,

  /**
   * Specify the size of the cell.
   * By default, the Table parent component set the value (`medium`).
   */
  size: $c2cf539fc0a7b212f8765df1e45cee0$import$PropTypes.oneOf(['small', 'medium']),

  /**
   * Set aria-sort direction.
   */
  sortDirection: $c2cf539fc0a7b212f8765df1e45cee0$import$PropTypes.oneOf(['asc', 'desc', false]),

  /**
   * Specify the cell type.
   * By default, the TableHead, TableBody or TableFooter parent component set the value.
   */
  variant: $c2cf539fc0a7b212f8765df1e45cee0$import$PropTypes.oneOf(['head', 'body', 'footer'])
} : void 0;
var $c2cf539fc0a7b212f8765df1e45cee0$export$default = $c2cf539fc0a7b212f8765df1e45cee0$import$withStyles($c2cf539fc0a7b212f8765df1e45cee0$export$styles, {
  name: 'MuiTableCell'
})($c2cf539fc0a7b212f8765df1e45cee0$var$TableCell);
$c2cf539fc0a7b212f8765df1e45cee0$exports.default = $c2cf539fc0a7b212f8765df1e45cee0$export$default;