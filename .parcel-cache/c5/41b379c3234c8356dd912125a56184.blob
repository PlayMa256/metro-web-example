var $a14c6d71c3f2141a512659e2023d171c$exports = {};

// Supports determination of isControlled().
// Controlled input accepts its current value as a prop.
//
// @see https://facebook.github.io/react/docs/forms.html#controlled-components
// @param value
// @returns {boolean} true if string (including '') or number (including zero)
function $a14c6d71c3f2141a512659e2023d171c$export$hasValue(value) {
  return value != null && !(Array.isArray(value) && value.length === 0);
} // Determine if field is empty or filled.
// Response determines if label is presented above field or as placeholder.
//
// @param obj
// @param SSR
// @returns {boolean} False when not present or empty string.
//                    True when any number or string with length.


$a14c6d71c3f2141a512659e2023d171c$exports.hasValue = $a14c6d71c3f2141a512659e2023d171c$export$hasValue;

function $a14c6d71c3f2141a512659e2023d171c$export$isFilled(obj) {
  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  return obj && ($a14c6d71c3f2141a512659e2023d171c$export$hasValue(obj.value) && obj.value !== '' || SSR && $a14c6d71c3f2141a512659e2023d171c$export$hasValue(obj.defaultValue) && obj.defaultValue !== '');
} // Determine if an Input is adorned on start.
// It's corresponding to the left with LTR.
//
// @param obj
// @returns {boolean} False when no adornments.
//                    True when adorned at the start.


$a14c6d71c3f2141a512659e2023d171c$exports.isFilled = $a14c6d71c3f2141a512659e2023d171c$export$isFilled;

function $a14c6d71c3f2141a512659e2023d171c$export$isAdornedStart(obj) {
  return obj.startAdornment;
}

$a14c6d71c3f2141a512659e2023d171c$exports.isAdornedStart = $a14c6d71c3f2141a512659e2023d171c$export$isAdornedStart;