var $e263b383969d44349d66543bc53f0701$exports = {};
$parcel$require("e263b383969d44349d66543bc53f0701", "d3-collection");
$parcel$require("e263b383969d44349d66543bc53f0701", "./array");
$parcel$require("e263b383969d44349d66543bc53f0701", "./init");
var $e263b383969d44349d66543bc53f0701$export$implicit = {
  name: "implicit"
};
$e263b383969d44349d66543bc53f0701$exports.implicit = $e263b383969d44349d66543bc53f0701$export$implicit;

function $e263b383969d44349d66543bc53f0701$export$default() {
  var index = $e263b383969d44349d66543bc53f0701$import$map(),
      domain = [],
      range = [],
      unknown = $e263b383969d44349d66543bc53f0701$export$implicit;

  function scale(d) {
    var key = d + "",
        i = index.get(key);

    if (!i) {
      if (unknown !== $e263b383969d44349d66543bc53f0701$export$implicit) return unknown;
      index.set(key, i = domain.push(d));
    }

    return range[(i - 1) % range.length];
  }

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [], index = $e263b383969d44349d66543bc53f0701$import$map();
    var i = -1,
        n = _.length,
        d,
        key;

    while (++i < n) if (!index.has(key = (d = _[i]) + "")) index.set(key, domain.push(d));

    return scale;
  };

  scale.range = function (_) {
    return arguments.length ? (range = $e263b383969d44349d66543bc53f0701$import$slice.call(_), scale) : range.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return $e263b383969d44349d66543bc53f0701$export$default(domain, range).unknown(unknown);
  };

  $e263b383969d44349d66543bc53f0701$import$initRange.apply(scale, arguments);
  return scale;
}

$e263b383969d44349d66543bc53f0701$exports.default = $e263b383969d44349d66543bc53f0701$export$default;