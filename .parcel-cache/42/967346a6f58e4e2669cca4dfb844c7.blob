var $bd63c11c34f3511eacf2fdb19f55141c$exports = {};
$parcel$require("bd63c11c34f3511eacf2fdb19f55141c", "@babel/runtime/helpers/esm/extends");
$parcel$require("bd63c11c34f3511eacf2fdb19f55141c", "@babel/runtime/helpers/esm/objectWithoutProperties");
$parcel$require("bd63c11c34f3511eacf2fdb19f55141c", "react");
$parcel$require("bd63c11c34f3511eacf2fdb19f55141c", "prop-types");
$parcel$require("bd63c11c34f3511eacf2fdb19f55141c", "clsx");
$parcel$require("bd63c11c34f3511eacf2fdb19f55141c", "../Typography");
$parcel$require("bd63c11c34f3511eacf2fdb19f55141c", "../styles/withStyles");
$parcel$require("bd63c11c34f3511eacf2fdb19f55141c", "../FormControl/FormControlContext");
var $bd63c11c34f3511eacf2fdb19f55141c$export$styles = {
  /* Styles applied to the root element. */
  root: {
    display: 'flex',
    height: '0.01em',
    // Fix IE 11 flexbox alignment. To remove at some point.
    maxHeight: '2em',
    alignItems: 'center'
  },

  /* Styles applied to the root element if `variant="filled"`. */
  filled: {
    '&$positionStart:not($hiddenLabel)': {
      marginTop: 16
    }
  },

  /* Styles applied to the root element if `position="start"`. */
  positionStart: {
    marginRight: 8
  },

  /* Styles applied to the root element if `position="end"`. */
  positionEnd: {
    marginLeft: 8
  },

  /* Styles applied to the root element if `disablePointerEvents=true`. */
  disablePointerEvents: {
    pointerEvents: 'none'
  },

  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */
  hiddenLabel: {},

  /* Styles applied if the adornment is used inside <FormControl margin="dense" />. */
  marginDense: {}
};
$bd63c11c34f3511eacf2fdb19f55141c$exports.styles = $bd63c11c34f3511eacf2fdb19f55141c$export$styles;
var $bd63c11c34f3511eacf2fdb19f55141c$var$InputAdornment = $bd63c11c34f3511eacf2fdb19f55141c$import$React.forwardRef(function InputAdornment(props, ref) {
  var children = props.children,
      classes = props.classes,
      className = props.className,
      _props$component = props.component,
      Component = _props$component === void 0 ? 'div' : _props$component,
      _props$disablePointer = props.disablePointerEvents,
      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,
      _props$disableTypogra = props.disableTypography,
      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,
      position = props.position,
      variantProp = props.variant,
      other = $bd63c11c34f3511eacf2fdb19f55141c$import$_objectWithoutProperties(props, ["children", "classes", "className", "component", "disablePointerEvents", "disableTypography", "position", "variant"]);
  var muiFormControl = $bd63c11c34f3511eacf2fdb19f55141c$import$useFormControl() || {};
  var variant = variantProp;

  if (variantProp && muiFormControl.variant) {
    if ("production" !== 'production') {
      if (variantProp === muiFormControl.variant) {
        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');
      }
    }
  }

  if (muiFormControl && !variant) {
    variant = muiFormControl.variant;
  }

  return $bd63c11c34f3511eacf2fdb19f55141c$import$React.createElement($bd63c11c34f3511eacf2fdb19f55141c$import$FormControlContext.Provider, {
    value: null
  }, $bd63c11c34f3511eacf2fdb19f55141c$import$React.createElement(Component, $bd63c11c34f3511eacf2fdb19f55141c$import$_extends({
    className: $bd63c11c34f3511eacf2fdb19f55141c$import$clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, {
      filled: classes.filled
    }[variant], {
      start: classes.positionStart,
      end: classes.positionEnd
    }[position], {
      dense: classes.marginDense
    }[muiFormControl.margin]),
    ref: ref
  }, other), typeof children === 'string' && !disableTypography ? $bd63c11c34f3511eacf2fdb19f55141c$import$React.createElement($bd63c11c34f3511eacf2fdb19f55141c$import$Typography, {
    color: "textSecondary"
  }, children) : children));
});
"production" !== "production" ? $bd63c11c34f3511eacf2fdb19f55141c$var$InputAdornment.propTypes = {
  /**
   * The content of the component, normally an `IconButton` or string.
   */
  children: $bd63c11c34f3511eacf2fdb19f55141c$import$PropTypes.node.isRequired,

  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: $bd63c11c34f3511eacf2fdb19f55141c$import$PropTypes.object.isRequired,

  /**
   * @ignore
   */
  className: $bd63c11c34f3511eacf2fdb19f55141c$import$PropTypes.string,

  /**
   * The component used for the root node.
   * Either a string to use a DOM element or a component.
   */
  component: $bd63c11c34f3511eacf2fdb19f55141c$import$PropTypes.elementType,

  /**
   * Disable pointer events on the root.
   * This allows for the content of the adornment to focus the input on click.
   */
  disablePointerEvents: $bd63c11c34f3511eacf2fdb19f55141c$import$PropTypes.bool,

  /**
   * If children is a string then disable wrapping in a Typography component.
   */
  disableTypography: $bd63c11c34f3511eacf2fdb19f55141c$import$PropTypes.bool,

  /**
   * @ignore
   */
  muiFormControl: $bd63c11c34f3511eacf2fdb19f55141c$import$PropTypes.object,

  /**
   * The position this adornment should appear relative to the `Input`.
   */
  position: $bd63c11c34f3511eacf2fdb19f55141c$import$PropTypes.oneOf(['start', 'end']),

  /**
   * The variant to use.
   * Note: If you are using the `TextField` component or the `FormControl` component
   * you do not have to set this manually.
   */
  variant: $bd63c11c34f3511eacf2fdb19f55141c$import$PropTypes.oneOf(['standard', 'outlined', 'filled'])
} : void 0;
var $bd63c11c34f3511eacf2fdb19f55141c$export$default = $bd63c11c34f3511eacf2fdb19f55141c$import$withStyles($bd63c11c34f3511eacf2fdb19f55141c$export$styles, {
  name: 'MuiInputAdornment'
})($bd63c11c34f3511eacf2fdb19f55141c$var$InputAdornment);
$bd63c11c34f3511eacf2fdb19f55141c$exports.default = $bd63c11c34f3511eacf2fdb19f55141c$export$default;