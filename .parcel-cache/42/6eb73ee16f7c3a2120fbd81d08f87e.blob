var $d7192eca5c4deb91477eb5a3314c2ae$exports = {};
var $d7192eca5c4deb91477eb5a3314c2ae$var$baseFindIndex = $parcel$require("9d7192eca5c4deb91477eb5a3314c2ae", "./_baseFindIndex"),
    $d7192eca5c4deb91477eb5a3314c2ae$var$baseIsNaN = $parcel$require("9d7192eca5c4deb91477eb5a3314c2ae", "./_baseIsNaN"),
    $d7192eca5c4deb91477eb5a3314c2ae$var$strictIndexOf = $parcel$require("9d7192eca5c4deb91477eb5a3314c2ae", "./_strictIndexOf");
/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */

function $d7192eca5c4deb91477eb5a3314c2ae$var$baseIndexOf(array, value, fromIndex) {
  return value === value ? $d7192eca5c4deb91477eb5a3314c2ae$var$strictIndexOf(array, value, fromIndex) : $d7192eca5c4deb91477eb5a3314c2ae$var$baseFindIndex(array, $d7192eca5c4deb91477eb5a3314c2ae$var$baseIsNaN, fromIndex);
}

$d7192eca5c4deb91477eb5a3314c2ae$exports = $d7192eca5c4deb91477eb5a3314c2ae$var$baseIndexOf;