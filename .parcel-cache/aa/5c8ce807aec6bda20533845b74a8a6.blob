var $ee94763e39ee03b8a1066274627ab7$exports = {};
var $ee94763e39ee03b8a1066274627ab7$var$isArray = $parcel$require("34ee94763e39ee03b8a1066274627ab7", "./isArray"),
    $ee94763e39ee03b8a1066274627ab7$var$isSymbol = $parcel$require("34ee94763e39ee03b8a1066274627ab7", "./isSymbol");
/** Used to match property names within property paths. */

var $ee94763e39ee03b8a1066274627ab7$var$reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    $ee94763e39ee03b8a1066274627ab7$var$reIsPlainProp = /^\w*$/;
/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */

function $ee94763e39ee03b8a1066274627ab7$var$isKey(value, object) {
  if ($ee94763e39ee03b8a1066274627ab7$var$isArray(value)) {
    return false;
  }

  var type = typeof value;

  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || $ee94763e39ee03b8a1066274627ab7$var$isSymbol(value)) {
    return true;
  }

  return $ee94763e39ee03b8a1066274627ab7$var$reIsPlainProp.test(value) || !$ee94763e39ee03b8a1066274627ab7$var$reIsDeepProp.test(value) || object != null && value in Object(object);
}

$ee94763e39ee03b8a1066274627ab7$exports = $ee94763e39ee03b8a1066274627ab7$var$isKey;