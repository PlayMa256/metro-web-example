var $ce0e48ddad27b17de7c833b34b7e$exports = {};
$parcel$require("9012ce0e48ddad27b17de7c833b34b7e", "./array");
$parcel$require("9012ce0e48ddad27b17de7c833b34b7e", "./bisect");
$parcel$require("9012ce0e48ddad27b17de7c833b34b7e", "./constant");
$parcel$require("9012ce0e48ddad27b17de7c833b34b7e", "./extent");
$parcel$require("9012ce0e48ddad27b17de7c833b34b7e", "./identity");
$parcel$require("9012ce0e48ddad27b17de7c833b34b7e", "./range");
$parcel$require("9012ce0e48ddad27b17de7c833b34b7e", "./ticks");
$parcel$require("9012ce0e48ddad27b17de7c833b34b7e", "./threshold/sturges");

var $ce0e48ddad27b17de7c833b34b7e$export$default = function () {
  var value = $ce0e48ddad27b17de7c833b34b7e$import$identity,
      domain = $ce0e48ddad27b17de7c833b34b7e$import$extent,
      threshold = $ce0e48ddad27b17de7c833b34b7e$import$sturges;

  function histogram(data) {
    var i,
        n = data.length,
        x,
        values = new Array(n);

    for (i = 0; i < n; ++i) {
      values[i] = value(data[i], i, data);
    }

    var xz = domain(values),
        x0 = xz[0],
        x1 = xz[1],
        tz = threshold(values, x0, x1); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      tz = $ce0e48ddad27b17de7c833b34b7e$import$tickStep(x0, x1, tz);
      tz = $ce0e48ddad27b17de7c833b34b7e$import$range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive
    } // Remove any thresholds outside the domain.


    var m = tz.length;

    while (tz[0] <= x0) tz.shift(), --m;

    while (tz[m - 1] > x1) tz.pop(), --m;

    var bins = new Array(m + 1),
        bin; // Initialize bins.

    for (i = 0; i <= m; ++i) {
      bin = bins[i] = [];
      bin.x0 = i > 0 ? tz[i - 1] : x0;
      bin.x1 = i < m ? tz[i] : x1;
    } // Assign data to bins by value, ignoring any outside the domain.


    for (i = 0; i < n; ++i) {
      x = values[i];

      if (x0 <= x && x <= x1) {
        bins[$ce0e48ddad27b17de7c833b34b7e$import$bisect(tz, x, 0, m)].push(data[i]);
      }
    }

    return bins;
  }

  histogram.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : $ce0e48ddad27b17de7c833b34b7e$import$constant(_), histogram) : value;
  };

  histogram.domain = function (_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : $ce0e48ddad27b17de7c833b34b7e$import$constant([_[0], _[1]]), histogram) : domain;
  };

  histogram.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? $ce0e48ddad27b17de7c833b34b7e$import$constant($ce0e48ddad27b17de7c833b34b7e$import$slice.call(_)) : $ce0e48ddad27b17de7c833b34b7e$import$constant(_), histogram) : threshold;
  };

  return histogram;
};

$ce0e48ddad27b17de7c833b34b7e$exports.default = $ce0e48ddad27b17de7c833b34b7e$export$default;