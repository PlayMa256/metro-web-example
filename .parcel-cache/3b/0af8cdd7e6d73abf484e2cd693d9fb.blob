var $bb2526405d2232a873df18d2f91ea9d$exports = {};
var $bb2526405d2232a873df18d2f91ea9d$var$memoizeCapped = $parcel$require("9bb2526405d2232a873df18d2f91ea9d", "./_memoizeCapped");
/** Used to match property names within property paths. */

var $bb2526405d2232a873df18d2f91ea9d$var$rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
/** Used to match backslashes in property paths. */

var $bb2526405d2232a873df18d2f91ea9d$var$reEscapeChar = /\\(\\)?/g;
/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */

var $bb2526405d2232a873df18d2f91ea9d$var$stringToPath = $bb2526405d2232a873df18d2f91ea9d$var$memoizeCapped(function (string) {
  var result = [];

  if (string.charCodeAt(0) === 46
  /* . */
  ) {
      result.push('');
    }

  string.replace($bb2526405d2232a873df18d2f91ea9d$var$rePropName, function (match, number, quote, subString) {
    result.push(quote ? subString.replace($bb2526405d2232a873df18d2f91ea9d$var$reEscapeChar, '$1') : number || match);
  });
  return result;
});
$bb2526405d2232a873df18d2f91ea9d$exports = $bb2526405d2232a873df18d2f91ea9d$var$stringToPath;