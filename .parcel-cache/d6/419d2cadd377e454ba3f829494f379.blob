var $f28233d47354c7340b3d30440b7bafd5$exports = {};
$parcel$require("f28233d47354c7340b3d30440b7bafd5", "@babel/runtime/helpers/esm/extends");
$parcel$require("f28233d47354c7340b3d30440b7bafd5", "@babel/runtime/helpers/esm/objectWithoutProperties");
$parcel$require("f28233d47354c7340b3d30440b7bafd5", "react");
$parcel$require("f28233d47354c7340b3d30440b7bafd5", "prop-types");
$parcel$require("f28233d47354c7340b3d30440b7bafd5", "clsx");
$parcel$require("f28233d47354c7340b3d30440b7bafd5", "../styles/withStyles");
$parcel$require("f28233d47354c7340b3d30440b7bafd5", "../ButtonBase");

var $f28233d47354c7340b3d30440b7bafd5$export$styles = function styles(theme) {
  return {
    /* Styles applied to the root element. */
    root: {
      display: 'block',
      textAlign: 'inherit',
      width: '100%',
      '&:hover $focusHighlight': {
        opacity: theme.palette.action.hoverOpacity
      },
      '&$focusVisible $focusHighlight': {
        opacity: 0.12
      }
    },

    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */
    focusVisible: {},

    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */
    focusHighlight: {
      overflow: 'hidden',
      pointerEvents: 'none',
      position: 'absolute',
      top: 0,
      right: 0,
      bottom: 0,
      left: 0,
      borderRadius: 'inherit',
      opacity: 0,
      backgroundColor: 'currentcolor',
      transition: theme.transitions.create('opacity', {
        duration: theme.transitions.duration.short
      })
    }
  };
};

$f28233d47354c7340b3d30440b7bafd5$exports.styles = $f28233d47354c7340b3d30440b7bafd5$export$styles;
var $f28233d47354c7340b3d30440b7bafd5$var$CardActionArea = $f28233d47354c7340b3d30440b7bafd5$import$React.forwardRef(function CardActionArea(props, ref) {
  var children = props.children,
      classes = props.classes,
      className = props.className,
      focusVisibleClassName = props.focusVisibleClassName,
      other = $f28233d47354c7340b3d30440b7bafd5$import$_objectWithoutProperties(props, ["children", "classes", "className", "focusVisibleClassName"]);
  return $f28233d47354c7340b3d30440b7bafd5$import$React.createElement($f28233d47354c7340b3d30440b7bafd5$import$ButtonBase, $f28233d47354c7340b3d30440b7bafd5$import$_extends({
    className: $f28233d47354c7340b3d30440b7bafd5$import$clsx(classes.root, className),
    focusVisibleClassName: $f28233d47354c7340b3d30440b7bafd5$import$clsx(focusVisibleClassName, classes.focusVisible),
    ref: ref
  }, other), children, $f28233d47354c7340b3d30440b7bafd5$import$React.createElement("span", {
    className: classes.focusHighlight
  }));
});
"production" !== "production" ? $f28233d47354c7340b3d30440b7bafd5$var$CardActionArea.propTypes = {
  /**
   * The content of the component.
   */
  children: $f28233d47354c7340b3d30440b7bafd5$import$PropTypes.node,

  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: $f28233d47354c7340b3d30440b7bafd5$import$PropTypes.object.isRequired,

  /**
   * @ignore
   */
  className: $f28233d47354c7340b3d30440b7bafd5$import$PropTypes.string,

  /**
   * @ignore
   */
  focusVisibleClassName: $f28233d47354c7340b3d30440b7bafd5$import$PropTypes.string
} : void 0;
var $f28233d47354c7340b3d30440b7bafd5$export$default = $f28233d47354c7340b3d30440b7bafd5$import$withStyles($f28233d47354c7340b3d30440b7bafd5$export$styles, {
  name: 'MuiCardActionArea'
})($f28233d47354c7340b3d30440b7bafd5$var$CardActionArea);
$f28233d47354c7340b3d30440b7bafd5$exports.default = $f28233d47354c7340b3d30440b7bafd5$export$default;