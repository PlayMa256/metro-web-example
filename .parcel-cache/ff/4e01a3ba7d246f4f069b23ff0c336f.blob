var $a5645e98da8790b8ce9e5691ed5$exports = {};
var $a5645e98da8790b8ce9e5691ed5$var$baseGetTag = $parcel$require("97727a5645e98da8790b8ce9e5691ed5", "./_baseGetTag"),
    $a5645e98da8790b8ce9e5691ed5$var$isObject = $parcel$require("97727a5645e98da8790b8ce9e5691ed5", "./isObject");
/** `Object#toString` result references. */

var $a5645e98da8790b8ce9e5691ed5$var$asyncTag = '[object AsyncFunction]',
    $a5645e98da8790b8ce9e5691ed5$var$funcTag = '[object Function]',
    $a5645e98da8790b8ce9e5691ed5$var$genTag = '[object GeneratorFunction]',
    $a5645e98da8790b8ce9e5691ed5$var$proxyTag = '[object Proxy]';
/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */

function $a5645e98da8790b8ce9e5691ed5$var$isFunction(value) {
  if (!$a5645e98da8790b8ce9e5691ed5$var$isObject(value)) {
    return false;
  } // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.


  var tag = $a5645e98da8790b8ce9e5691ed5$var$baseGetTag(value);
  return tag == $a5645e98da8790b8ce9e5691ed5$var$funcTag || tag == $a5645e98da8790b8ce9e5691ed5$var$genTag || tag == $a5645e98da8790b8ce9e5691ed5$var$asyncTag || tag == $a5645e98da8790b8ce9e5691ed5$var$proxyTag;
}

$a5645e98da8790b8ce9e5691ed5$exports = $a5645e98da8790b8ce9e5691ed5$var$isFunction;