var $ad3aaa49c4751999271e2$exports = {};
$parcel$require("58362249721ad3aaa49c4751999271e2", "lodash/isEqual");
$parcel$require("58362249721ad3aaa49c4751999271e2", "lodash/isFunction");
$parcel$require("58362249721ad3aaa49c4751999271e2", "lodash/isNil");
$parcel$require("58362249721ad3aaa49c4751999271e2", "react");
$parcel$require("58362249721ad3aaa49c4751999271e2", "prop-types");
$parcel$require("58362249721ad3aaa49c4751999271e2", "react-smooth");
$parcel$require("58362249721ad3aaa49c4751999271e2", "classnames");
$parcel$require("58362249721ad3aaa49c4751999271e2", "../util/PureRender");
$parcel$require("58362249721ad3aaa49c4751999271e2", "../shape/Curve");
$parcel$require("58362249721ad3aaa49c4751999271e2", "../shape/Dot");
$parcel$require("58362249721ad3aaa49c4751999271e2", "../container/Layer");
$parcel$require("58362249721ad3aaa49c4751999271e2", "../component/LabelList");
$parcel$require("58362249721ad3aaa49c4751999271e2", "./ErrorBar");
$parcel$require("58362249721ad3aaa49c4751999271e2", "../util/DataUtils");
$parcel$require("58362249721ad3aaa49c4751999271e2", "../util/ReactUtils");
$parcel$require("58362249721ad3aaa49c4751999271e2", "../util/ChartUtils");
var $ad3aaa49c4751999271e2$var$_class, $ad3aaa49c4751999271e2$var$_class2, $ad3aaa49c4751999271e2$var$_temp;

function $ad3aaa49c4751999271e2$var$_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    $ad3aaa49c4751999271e2$var$_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    $ad3aaa49c4751999271e2$var$_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return $ad3aaa49c4751999271e2$var$_typeof(obj);
}

function $ad3aaa49c4751999271e2$var$_extends() {
  $ad3aaa49c4751999271e2$var$_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return $ad3aaa49c4751999271e2$var$_extends.apply(this, arguments);
}

function $ad3aaa49c4751999271e2$var$ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function $ad3aaa49c4751999271e2$var$_objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      $ad3aaa49c4751999271e2$var$ownKeys(source, true).forEach(function (key) {
        $ad3aaa49c4751999271e2$var$_defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      $ad3aaa49c4751999271e2$var$ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function $ad3aaa49c4751999271e2$var$_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function $ad3aaa49c4751999271e2$var$_toConsumableArray(arr) {
  return $ad3aaa49c4751999271e2$var$_arrayWithoutHoles(arr) || $ad3aaa49c4751999271e2$var$_iterableToArray(arr) || $ad3aaa49c4751999271e2$var$_nonIterableSpread();
}

function $ad3aaa49c4751999271e2$var$_nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function $ad3aaa49c4751999271e2$var$_iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function $ad3aaa49c4751999271e2$var$_arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

function $ad3aaa49c4751999271e2$var$_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function $ad3aaa49c4751999271e2$var$_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function $ad3aaa49c4751999271e2$var$_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) $ad3aaa49c4751999271e2$var$_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) $ad3aaa49c4751999271e2$var$_defineProperties(Constructor, staticProps);
  return Constructor;
}

function $ad3aaa49c4751999271e2$var$_possibleConstructorReturn(self, call) {
  if (call && ($ad3aaa49c4751999271e2$var$_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return $ad3aaa49c4751999271e2$var$_assertThisInitialized(self);
}

function $ad3aaa49c4751999271e2$var$_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function $ad3aaa49c4751999271e2$var$_getPrototypeOf(o) {
  $ad3aaa49c4751999271e2$var$_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return $ad3aaa49c4751999271e2$var$_getPrototypeOf(o);
}

function $ad3aaa49c4751999271e2$var$_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) $ad3aaa49c4751999271e2$var$_setPrototypeOf(subClass, superClass);
}

function $ad3aaa49c4751999271e2$var$_setPrototypeOf(o, p) {
  $ad3aaa49c4751999271e2$var$_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return $ad3aaa49c4751999271e2$var$_setPrototypeOf(o, p);
}
/**
 * @fileOverview Line
 */


var $ad3aaa49c4751999271e2$export$default = $ad3aaa49c4751999271e2$import$pureRender($ad3aaa49c4751999271e2$var$_class = ($ad3aaa49c4751999271e2$var$_temp = $ad3aaa49c4751999271e2$var$_class2 =
/*#__PURE__*/
function (_Component) {
  $ad3aaa49c4751999271e2$var$_inherits(Line, _Component);

  function Line() {
    var _getPrototypeOf2;

    var _this;

    $ad3aaa49c4751999271e2$var$_classCallCheck(this, Line);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = $ad3aaa49c4751999271e2$var$_possibleConstructorReturn(this, (_getPrototypeOf2 = $ad3aaa49c4751999271e2$var$_getPrototypeOf(Line)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.state = {
      isAnimationFinished: true,
      totalLength: 0
    };
    _this.id = $ad3aaa49c4751999271e2$import$uniqueId('recharts-line-');

    _this.cachePrevData = function (points) {
      _this.setState({
        prevPoints: points
      });
    };

    _this.pathRef = function (node) {
      _this.mainCurve = node;
    };

    _this.handleAnimationEnd = function () {
      _this.setState({
        isAnimationFinished: true
      });

      _this.props.onAnimationEnd();
    };

    _this.handleAnimationStart = function () {
      _this.setState({
        isAnimationFinished: false
      });

      _this.props.onAnimationStart();
    };

    return _this;
  }

  $ad3aaa49c4751999271e2$var$_createClass(Line, [{
    key: "componentDidMount",

    /* eslint-disable  react/no-did-mount-set-state */
    value: function componentDidMount() {
      if (!this.props.isAnimationActive) {
        return;
      }

      var totalLength = this.getTotalLength();
      this.setState({
        totalLength: totalLength
      });
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      var _this$props = this.props,
          animationId = _this$props.animationId,
          points = _this$props.points;

      if (nextProps.animationId !== animationId) {
        this.cachePrevData(points);
      }
    }
  }, {
    key: "getTotalLength",
    value: function getTotalLength() {
      var curveDom = this.mainCurve;

      try {
        return curveDom && curveDom.getTotalLength && curveDom.getTotalLength() || 0;
      } catch (err) {
        return 0;
      }
    }
  }, {
    key: "getStrokeDasharray",
    value: function getStrokeDasharray(length, totalLength, lines) {
      var lineLength = lines.reduce(function (pre, next) {
        return pre + next;
      });
      var count = parseInt(length / lineLength, 10);
      var remainLength = length % lineLength;
      var restLength = totalLength - length;
      var remainLines = [];

      for (var i = 0, sum = 0;; sum += lines[i], ++i) {
        if (sum + lines[i] > remainLength) {
          remainLines = [].concat($ad3aaa49c4751999271e2$var$_toConsumableArray(lines.slice(0, i)), [remainLength - sum]);
          break;
        }
      }

      var emptyLines = remainLines.length % 2 === 0 ? [0, restLength] : [restLength];
      return [].concat($ad3aaa49c4751999271e2$var$_toConsumableArray(this.constructor.repeat(lines, count)), $ad3aaa49c4751999271e2$var$_toConsumableArray(remainLines), emptyLines).map(function (line) {
        return "".concat(line, "px");
      }).join(', ');
    }
  }, {
    key: "renderErrorBar",
    value: function renderErrorBar() {
      if (this.props.isAnimationActive && !this.state.isAnimationFinished) {
        return null;
      }

      var _this$props2 = this.props,
          points = _this$props2.points,
          xAxis = _this$props2.xAxis,
          yAxis = _this$props2.yAxis,
          layout = _this$props2.layout,
          children = _this$props2.children;
      var errorBarItems = $ad3aaa49c4751999271e2$import$findAllByType(children, $ad3aaa49c4751999271e2$import$ErrorBar);

      if (!errorBarItems) {
        return null;
      }

      function dataPointFormatter(dataPoint, dataKey) {
        return {
          x: dataPoint.x,
          y: dataPoint.y,
          value: dataPoint.value,
          errorVal: $ad3aaa49c4751999271e2$import$getValueByDataKey(dataPoint.payload, dataKey)
        };
      }

      return errorBarItems.map(function (item, i) {
        return $ad3aaa49c4751999271e2$import$React.cloneElement(item, {
          key: i,
          data: points,
          xAxis: xAxis,
          yAxis: yAxis,
          layout: layout,
          dataPointFormatter: dataPointFormatter
        });
      });
    }
  }, {
    key: "renderDots",
    value: function renderDots(needClip, clipPathId) {
      var _this2 = this;

      var isAnimationActive = this.props.isAnimationActive;

      if (isAnimationActive && !this.state.isAnimationFinished) {
        return null;
      }

      var _this$props3 = this.props,
          dot = _this$props3.dot,
          points = _this$props3.points,
          dataKey = _this$props3.dataKey;
      var lineProps = $ad3aaa49c4751999271e2$import$getPresentationAttributes(this.props);
      var customDotProps = $ad3aaa49c4751999271e2$import$getPresentationAttributes(dot);
      var dotEvents = $ad3aaa49c4751999271e2$import$filterEventAttributes(dot);
      var dots = points.map(function (entry, i) {
        var dotProps = $ad3aaa49c4751999271e2$var$_objectSpread({
          key: "dot-".concat(i),
          r: 3
        }, lineProps, {}, customDotProps, {}, dotEvents, {
          value: entry.value,
          dataKey: dataKey,
          cx: entry.x,
          cy: entry.y,
          index: i,
          payload: entry.payload
        });
        return _this2.constructor.renderDotItem(dot, dotProps);
      });
      var dotsProps = {
        clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null
      };
      return $ad3aaa49c4751999271e2$import$React.createElement($ad3aaa49c4751999271e2$import$Layer, $ad3aaa49c4751999271e2$var$_extends({
        className: "recharts-line-dots",
        key: "dots"
      }, dotsProps), dots);
    }
  }, {
    key: "renderCurveStatically",
    value: function renderCurveStatically(points, needClip, clipPathId, props) {
      var _this$props4 = this.props,
          type = _this$props4.type,
          layout = _this$props4.layout,
          connectNulls = _this$props4.connectNulls;
      var curveProps = $ad3aaa49c4751999271e2$var$_objectSpread({}, $ad3aaa49c4751999271e2$import$getPresentationAttributes(this.props), {}, $ad3aaa49c4751999271e2$import$filterEventAttributes(this.props), {
        fill: 'none',
        className: 'recharts-line-curve',
        clipPath: needClip ? "url(#clipPath-".concat(clipPathId, ")") : null,
        points: points
      }, props, {
        type: type,
        layout: layout,
        connectNulls: connectNulls
      });
      return $ad3aaa49c4751999271e2$import$React.createElement($ad3aaa49c4751999271e2$import$Curve, $ad3aaa49c4751999271e2$var$_extends({}, curveProps, {
        pathRef: this.pathRef
      }));
    }
  }, {
    key: "renderCurveWithAnimation",
    value: function renderCurveWithAnimation(needClip, clipPathId) {
      var _this3 = this;

      var _this$props5 = this.props,
          points = _this$props5.points,
          strokeDasharray = _this$props5.strokeDasharray,
          isAnimationActive = _this$props5.isAnimationActive,
          animationBegin = _this$props5.animationBegin,
          animationDuration = _this$props5.animationDuration,
          animationEasing = _this$props5.animationEasing,
          animationId = _this$props5.animationId,
          width = _this$props5.width,
          height = _this$props5.height;
      var _this$state = this.state,
          prevPoints = _this$state.prevPoints,
          totalLength = _this$state.totalLength;
      return $ad3aaa49c4751999271e2$import$React.createElement($ad3aaa49c4751999271e2$import$Animate, {
        begin: animationBegin,
        duration: animationDuration,
        isActive: isAnimationActive,
        easing: animationEasing,
        from: {
          t: 0
        },
        to: {
          t: 1
        },
        key: "line-".concat(animationId),
        onAnimationEnd: this.handleAnimationEnd,
        onAnimationStart: this.handleAnimationStart
      }, function (_ref) {
        var t = _ref.t;

        if (prevPoints) {
          var prevPointsDiffFactor = prevPoints.length / points.length;
          var stepData = points.map(function (entry, index) {
            var prevPointIndex = Math.floor(index * prevPointsDiffFactor);

            if (prevPoints[prevPointIndex]) {
              var prev = prevPoints[prevPointIndex];
              var interpolatorX = $ad3aaa49c4751999271e2$import$interpolateNumber(prev.x, entry.x);
              var interpolatorY = $ad3aaa49c4751999271e2$import$interpolateNumber(prev.y, entry.y);
              return $ad3aaa49c4751999271e2$var$_objectSpread({}, entry, {
                x: interpolatorX(t),
                y: interpolatorY(t)
              });
            } // magic number of faking previous x and y location


            if (_this3.animateNewValues) {
              var _interpolatorX = $ad3aaa49c4751999271e2$import$interpolateNumber(width * 2, entry.x);

              var _interpolatorY = $ad3aaa49c4751999271e2$import$interpolateNumber(height / 2, entry.y);

              return $ad3aaa49c4751999271e2$var$_objectSpread({}, entry, {
                x: _interpolatorX(t),
                y: _interpolatorY(t)
              });
            }

            return $ad3aaa49c4751999271e2$var$_objectSpread({}, entry, {
              x: entry.x,
              y: entry.y
            });
          });
          return _this3.renderCurveStatically(stepData, needClip, clipPathId);
        }

        var interpolator = $ad3aaa49c4751999271e2$import$interpolateNumber(0, totalLength);
        var curLength = interpolator(t);
        var currentStrokeDasharray;

        if (strokeDasharray) {
          var lines = strokeDasharray.split(/[,\s]+/gim).map(function (num) {
            return parseFloat(num);
          });
          currentStrokeDasharray = _this3.getStrokeDasharray(curLength, totalLength, lines);
        } else {
          currentStrokeDasharray = "".concat(curLength, "px ").concat(totalLength - curLength, "px");
        }

        return _this3.renderCurveStatically(points, needClip, clipPathId, {
          strokeDasharray: currentStrokeDasharray
        });
      });
    }
  }, {
    key: "renderCurve",
    value: function renderCurve(needClip, clipPathId) {
      var _this$props6 = this.props,
          points = _this$props6.points,
          isAnimationActive = _this$props6.isAnimationActive;
      var _this$state2 = this.state,
          prevPoints = _this$state2.prevPoints,
          totalLength = _this$state2.totalLength;

      if (isAnimationActive && points && points.length && (!prevPoints && totalLength > 0 || !$ad3aaa49c4751999271e2$import$_isEqual(prevPoints, points))) {
        return this.renderCurveWithAnimation(needClip, clipPathId);
      }

      return this.renderCurveStatically(points, needClip, clipPathId);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props7 = this.props,
          hide = _this$props7.hide,
          dot = _this$props7.dot,
          points = _this$props7.points,
          className = _this$props7.className,
          xAxis = _this$props7.xAxis,
          yAxis = _this$props7.yAxis,
          top = _this$props7.top,
          left = _this$props7.left,
          width = _this$props7.width,
          height = _this$props7.height,
          isAnimationActive = _this$props7.isAnimationActive,
          id = _this$props7.id;

      if (hide || !points || !points.length) {
        return null;
      }

      var isAnimationFinished = this.state.isAnimationFinished;
      var hasSinglePoint = points.length === 1;
      var layerClass = $ad3aaa49c4751999271e2$import$classNames('recharts-line', className);
      var needClip = xAxis && xAxis.allowDataOverflow || yAxis && yAxis.allowDataOverflow;
      var clipPathId = $ad3aaa49c4751999271e2$import$_isNil(id) ? this.id : id;
      return $ad3aaa49c4751999271e2$import$React.createElement($ad3aaa49c4751999271e2$import$Layer, {
        className: layerClass
      }, needClip ? $ad3aaa49c4751999271e2$import$React.createElement("defs", null, $ad3aaa49c4751999271e2$import$React.createElement("clipPath", {
        id: "clipPath-".concat(clipPathId)
      }, $ad3aaa49c4751999271e2$import$React.createElement("rect", {
        x: left,
        y: top,
        width: width,
        height: height
      }))) : null, !hasSinglePoint && this.renderCurve(needClip, clipPathId), this.renderErrorBar(), (hasSinglePoint || dot) && this.renderDots(needClip, clipPathId), (!isAnimationActive || isAnimationFinished) && $ad3aaa49c4751999271e2$import$LabelList.renderCallByParent(this.props, points));
    }
  }], [{
    key: "repeat",
    value: function repeat(lines, count) {
      var linesUnit = lines.length % 2 !== 0 ? [].concat($ad3aaa49c4751999271e2$var$_toConsumableArray(lines), [0]) : lines;
      var result = [];

      for (var i = 0; i < count; ++i) {
        result = [].concat($ad3aaa49c4751999271e2$var$_toConsumableArray(result), $ad3aaa49c4751999271e2$var$_toConsumableArray(linesUnit));
      }

      return result;
    }
  }, {
    key: "renderDotItem",
    value: function renderDotItem(option, props) {
      var dotItem;

      if ($ad3aaa49c4751999271e2$import$React.isValidElement(option)) {
        dotItem = $ad3aaa49c4751999271e2$import$React.cloneElement(option, props);
      } else if ($ad3aaa49c4751999271e2$import$_isFunction(option)) {
        dotItem = option(props);
      } else {
        var className = $ad3aaa49c4751999271e2$import$classNames('recharts-line-dot', option ? option.className : '');
        dotItem = $ad3aaa49c4751999271e2$import$React.createElement($ad3aaa49c4751999271e2$import$Dot, $ad3aaa49c4751999271e2$var$_extends({}, props, {
          className: className
        }));
      }

      return dotItem;
    }
  }]);
  return Line;
}($ad3aaa49c4751999271e2$import$Component), $ad3aaa49c4751999271e2$var$_class2.displayName = 'Line', $ad3aaa49c4751999271e2$var$_class2.propTypes = $ad3aaa49c4751999271e2$var$_objectSpread({}, $ad3aaa49c4751999271e2$import$PRESENTATION_ATTRIBUTES, {}, $ad3aaa49c4751999271e2$import$EVENT_ATTRIBUTES, {
  className: $ad3aaa49c4751999271e2$import$PropTypes.string,
  type: $ad3aaa49c4751999271e2$import$PropTypes.oneOfType([$ad3aaa49c4751999271e2$import$PropTypes.oneOf(['basis', 'basisClosed', 'basisOpen', 'linear', 'linearClosed', 'natural', 'monotoneX', 'monotoneY', 'monotone', 'step', 'stepBefore', 'stepAfter']), $ad3aaa49c4751999271e2$import$PropTypes.func]),
  unit: $ad3aaa49c4751999271e2$import$PropTypes.oneOfType([$ad3aaa49c4751999271e2$import$PropTypes.string, $ad3aaa49c4751999271e2$import$PropTypes.number]),
  name: $ad3aaa49c4751999271e2$import$PropTypes.oneOfType([$ad3aaa49c4751999271e2$import$PropTypes.string, $ad3aaa49c4751999271e2$import$PropTypes.number]),
  yAxisId: $ad3aaa49c4751999271e2$import$PropTypes.oneOfType([$ad3aaa49c4751999271e2$import$PropTypes.string, $ad3aaa49c4751999271e2$import$PropTypes.number]),
  xAxisId: $ad3aaa49c4751999271e2$import$PropTypes.oneOfType([$ad3aaa49c4751999271e2$import$PropTypes.string, $ad3aaa49c4751999271e2$import$PropTypes.number]),
  yAxis: $ad3aaa49c4751999271e2$import$PropTypes.object,
  xAxis: $ad3aaa49c4751999271e2$import$PropTypes.object,
  legendType: $ad3aaa49c4751999271e2$import$PropTypes.oneOf($ad3aaa49c4751999271e2$import$LEGEND_TYPES),
  tooltipType: $ad3aaa49c4751999271e2$import$PropTypes.oneOf($ad3aaa49c4751999271e2$import$TOOLTIP_TYPES),
  layout: $ad3aaa49c4751999271e2$import$PropTypes.oneOf(['horizontal', 'vertical']),
  connectNulls: $ad3aaa49c4751999271e2$import$PropTypes.bool,
  hide: $ad3aaa49c4751999271e2$import$PropTypes.bool,
  // whether have dot in line
  activeDot: $ad3aaa49c4751999271e2$import$PropTypes.oneOfType([$ad3aaa49c4751999271e2$import$PropTypes.object, $ad3aaa49c4751999271e2$import$PropTypes.element, $ad3aaa49c4751999271e2$import$PropTypes.func, $ad3aaa49c4751999271e2$import$PropTypes.bool]),
  dot: $ad3aaa49c4751999271e2$import$PropTypes.oneOfType([$ad3aaa49c4751999271e2$import$PropTypes.object, $ad3aaa49c4751999271e2$import$PropTypes.element, $ad3aaa49c4751999271e2$import$PropTypes.func, $ad3aaa49c4751999271e2$import$PropTypes.bool]),
  top: $ad3aaa49c4751999271e2$import$PropTypes.number,
  left: $ad3aaa49c4751999271e2$import$PropTypes.number,
  width: $ad3aaa49c4751999271e2$import$PropTypes.number,
  height: $ad3aaa49c4751999271e2$import$PropTypes.number,
  points: $ad3aaa49c4751999271e2$import$PropTypes.arrayOf($ad3aaa49c4751999271e2$import$PropTypes.shape({
    x: $ad3aaa49c4751999271e2$import$PropTypes.number,
    y: $ad3aaa49c4751999271e2$import$PropTypes.number,
    value: $ad3aaa49c4751999271e2$import$PropTypes.value
  })),
  onAnimationStart: $ad3aaa49c4751999271e2$import$PropTypes.func,
  onAnimationEnd: $ad3aaa49c4751999271e2$import$PropTypes.func,
  isAnimationActive: $ad3aaa49c4751999271e2$import$PropTypes.bool,
  animateNewValues: $ad3aaa49c4751999271e2$import$PropTypes.bool,
  animationBegin: $ad3aaa49c4751999271e2$import$PropTypes.number,
  animationDuration: $ad3aaa49c4751999271e2$import$PropTypes.number,
  animationEasing: $ad3aaa49c4751999271e2$import$PropTypes.oneOf(['ease', 'ease-in', 'ease-out', 'ease-in-out', 'linear']),
  animationId: $ad3aaa49c4751999271e2$import$PropTypes.number,
  id: $ad3aaa49c4751999271e2$import$PropTypes.string
}), $ad3aaa49c4751999271e2$var$_class2.defaultProps = {
  xAxisId: 0,
  yAxisId: 0,
  connectNulls: false,
  activeDot: true,
  dot: true,
  legendType: 'line',
  stroke: '#3182bd',
  strokeWidth: 1,
  fill: '#fff',
  points: [],
  isAnimationActive: !$ad3aaa49c4751999271e2$import$isSsr(),
  animateNewValues: true,
  animationBegin: 0,
  animationDuration: 1500,
  animationEasing: 'ease',
  hide: false,
  onAnimationStart: function onAnimationStart() {},
  onAnimationEnd: function onAnimationEnd() {}
}, $ad3aaa49c4751999271e2$var$_class2.getComposedData = function (_ref2) {
  var props = _ref2.props,
      xAxis = _ref2.xAxis,
      yAxis = _ref2.yAxis,
      xAxisTicks = _ref2.xAxisTicks,
      yAxisTicks = _ref2.yAxisTicks,
      dataKey = _ref2.dataKey,
      bandSize = _ref2.bandSize,
      displayedData = _ref2.displayedData,
      offset = _ref2.offset;
  var layout = props.layout;
  var points = displayedData.map(function (entry, index) {
    var value = $ad3aaa49c4751999271e2$import$getValueByDataKey(entry, dataKey);

    if (layout === 'horizontal') {
      return {
        x: $ad3aaa49c4751999271e2$import$getCateCoordinateOfLine({
          axis: xAxis,
          ticks: xAxisTicks,
          bandSize: bandSize,
          entry: entry,
          index: index
        }),
        y: $ad3aaa49c4751999271e2$import$_isNil(value) ? null : yAxis.scale(value),
        value: value,
        payload: entry
      };
    }

    return {
      x: $ad3aaa49c4751999271e2$import$_isNil(value) ? null : xAxis.scale(value),
      y: $ad3aaa49c4751999271e2$import$getCateCoordinateOfLine({
        axis: yAxis,
        ticks: yAxisTicks,
        bandSize: bandSize,
        entry: entry,
        index: index
      }),
      value: value,
      payload: entry
    };
  });
  return $ad3aaa49c4751999271e2$var$_objectSpread({
    points: points,
    layout: layout
  }, offset);
}, $ad3aaa49c4751999271e2$var$_temp)) || $ad3aaa49c4751999271e2$var$_class;
$ad3aaa49c4751999271e2$exports.default = $ad3aaa49c4751999271e2$export$default;