var $e1882614d782ed6654c28a8b73b034b2$exports = {};
$parcel$require("e1882614d782ed6654c28a8b73b034b2", "@babel/runtime/helpers/esm/extends");
$parcel$require("e1882614d782ed6654c28a8b73b034b2", "@babel/runtime/helpers/esm/objectWithoutProperties");
$parcel$require("e1882614d782ed6654c28a8b73b034b2", "react");
$parcel$require("e1882614d782ed6654c28a8b73b034b2", "prop-types");
$parcel$require("e1882614d782ed6654c28a8b73b034b2", "clsx");
$parcel$require("e1882614d782ed6654c28a8b73b034b2", "../styles/withStyles");

var $e1882614d782ed6654c28a8b73b034b2$export$styles = function styles(theme) {
  return {
    /* Styles applied to the root element. */
    root: {
      position: 'absolute',
      left: 0,
      right: 0,
      height: 48,
      background: 'rgba(0, 0, 0, 0.5)',
      display: 'flex',
      alignItems: 'center',
      fontFamily: theme.typography.fontFamily
    },

    /* Styles applied to the root element if `titlePosition="bottom"`. */
    titlePositionBottom: {
      bottom: 0
    },

    /* Styles applied to the root element if `titlePosition="top"`. */
    titlePositionTop: {
      top: 0
    },

    /* Styles applied to the root element if a `subtitle` is provided. */
    rootSubtitle: {
      height: 68
    },

    /* Styles applied to the title and subtitle container element. */
    titleWrap: {
      flexGrow: 1,
      marginLeft: 16,
      marginRight: 16,
      color: theme.palette.common.white,
      overflow: 'hidden'
    },

    /* Styles applied to the container element if `actionPosition="left"`. */
    titleWrapActionPosLeft: {
      marginLeft: 0
    },

    /* Styles applied to the container element if `actionPosition="right"`. */
    titleWrapActionPosRight: {
      marginRight: 0
    },

    /* Styles applied to the title container element. */
    title: {
      fontSize: theme.typography.pxToRem(16),
      lineHeight: '24px',
      textOverflow: 'ellipsis',
      overflow: 'hidden',
      whiteSpace: 'nowrap'
    },

    /* Styles applied to the subtitle container element. */
    subtitle: {
      fontSize: theme.typography.pxToRem(12),
      lineHeight: 1,
      textOverflow: 'ellipsis',
      overflow: 'hidden',
      whiteSpace: 'nowrap'
    },

    /* Styles applied to the actionIcon if supplied. */
    actionIcon: {},

    /* Styles applied to the actionIcon if `actionPosition="left"`. */
    actionIconActionPosLeft: {
      order: -1
    }
  };
};

$e1882614d782ed6654c28a8b73b034b2$exports.styles = $e1882614d782ed6654c28a8b73b034b2$export$styles;
var $e1882614d782ed6654c28a8b73b034b2$var$GridListTileBar = $e1882614d782ed6654c28a8b73b034b2$import$React.forwardRef(function GridListTileBar(props, ref) {
  var actionIcon = props.actionIcon,
      _props$actionPosition = props.actionPosition,
      actionPosition = _props$actionPosition === void 0 ? 'right' : _props$actionPosition,
      classes = props.classes,
      classNameProp = props.className,
      subtitle = props.subtitle,
      title = props.title,
      _props$titlePosition = props.titlePosition,
      titlePosition = _props$titlePosition === void 0 ? 'bottom' : _props$titlePosition,
      other = $e1882614d782ed6654c28a8b73b034b2$import$_objectWithoutProperties(props, ["actionIcon", "actionPosition", "classes", "className", "subtitle", "title", "titlePosition"]);
  var actionPos = actionIcon && actionPosition;
  var className = $e1882614d782ed6654c28a8b73b034b2$import$clsx(classes.root, classNameProp, titlePosition === 'top' ? classes.titlePositionTop : classes.titlePositionBottom, subtitle && classes.rootSubtitle); // Remove the margin between the title / subtitle wrapper, and the Action Icon

  var titleWrapClassName = $e1882614d782ed6654c28a8b73b034b2$import$clsx(classes.titleWrap, {
    left: classes.titleWrapActionPosLeft,
    right: classes.titleWrapActionPosRight
  }[actionPos]);
  return $e1882614d782ed6654c28a8b73b034b2$import$React.createElement("div", $e1882614d782ed6654c28a8b73b034b2$import$_extends({
    className: className,
    ref: ref
  }, other), $e1882614d782ed6654c28a8b73b034b2$import$React.createElement("div", {
    className: titleWrapClassName
  }, $e1882614d782ed6654c28a8b73b034b2$import$React.createElement("div", {
    className: classes.title
  }, title), subtitle ? $e1882614d782ed6654c28a8b73b034b2$import$React.createElement("div", {
    className: classes.subtitle
  }, subtitle) : null), actionIcon ? $e1882614d782ed6654c28a8b73b034b2$import$React.createElement("div", {
    className: $e1882614d782ed6654c28a8b73b034b2$import$clsx(classes.actionIcon, {
      left: classes.actionIconActionPosLeft
    }[actionPos])
  }, actionIcon) : null);
});
"production" !== "production" ? $e1882614d782ed6654c28a8b73b034b2$var$GridListTileBar.propTypes = {
  /**
   * An IconButton element to be used as secondary action target
   * (primary action target is the tile itself).
   */
  actionIcon: $e1882614d782ed6654c28a8b73b034b2$import$PropTypes.node,

  /**
   * Position of secondary action IconButton.
   */
  actionPosition: $e1882614d782ed6654c28a8b73b034b2$import$PropTypes.oneOf(['left', 'right']),

  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: $e1882614d782ed6654c28a8b73b034b2$import$PropTypes.object.isRequired,

  /**
   * @ignore
   */
  className: $e1882614d782ed6654c28a8b73b034b2$import$PropTypes.string,

  /**
   * String or element serving as subtitle (support text).
   */
  subtitle: $e1882614d782ed6654c28a8b73b034b2$import$PropTypes.node,

  /**
   * Title to be displayed on tile.
   */
  title: $e1882614d782ed6654c28a8b73b034b2$import$PropTypes.node,

  /**
   * Position of the title bar.
   */
  titlePosition: $e1882614d782ed6654c28a8b73b034b2$import$PropTypes.oneOf(['top', 'bottom'])
} : void 0;
var $e1882614d782ed6654c28a8b73b034b2$export$default = $e1882614d782ed6654c28a8b73b034b2$import$withStyles($e1882614d782ed6654c28a8b73b034b2$export$styles, {
  name: 'MuiGridListTileBar'
})($e1882614d782ed6654c28a8b73b034b2$var$GridListTileBar);
$e1882614d782ed6654c28a8b73b034b2$exports.default = $e1882614d782ed6654c28a8b73b034b2$export$default;