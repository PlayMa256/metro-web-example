// 20.2.2.17 Math.hypot([value1[, value2[, â€¦ ]]])
var $d99cc7a1a0e0a1faf34584feaea55$var$$export = $parcel$require("704d99cc7a1a0e0a1faf34584feaea55", "./_export");
var $d99cc7a1a0e0a1faf34584feaea55$var$abs = Math.abs;
$d99cc7a1a0e0a1faf34584feaea55$var$$export($d99cc7a1a0e0a1faf34584feaea55$var$$export.S, 'Math', {
  hypot: function hypot(value1, value2) {
    // eslint-disable-line no-unused-vars
    var sum = 0;
    var i = 0;
    var aLen = arguments.length;
    var larg = 0;
    var arg, div;

    while (i < aLen) {
      arg = $d99cc7a1a0e0a1faf34584feaea55$var$abs(arguments[i++]);

      if (larg < arg) {
        div = larg / arg;
        sum = sum * div * div + 1;
        larg = arg;
      } else if (arg > 0) {
        div = arg / larg;
        sum += div * div;
      } else sum += arg;
    }

    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
  }
});