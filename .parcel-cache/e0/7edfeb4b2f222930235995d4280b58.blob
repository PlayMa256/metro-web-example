var $a77984c8b6754e989128c3177b6af1$exports = {};
$parcel$require("24a77984c8b6754e989128c3177b6af1", "@babel/runtime/helpers/esm/extends");
$parcel$require("24a77984c8b6754e989128c3177b6af1", "@babel/runtime/helpers/esm/objectWithoutProperties");
$parcel$require("24a77984c8b6754e989128c3177b6af1", "react");
$parcel$require("24a77984c8b6754e989128c3177b6af1", "prop-types");
$parcel$require("24a77984c8b6754e989128c3177b6af1", "clsx");
$parcel$require("24a77984c8b6754e989128c3177b6af1", "../styles/withStyles");
$parcel$require("24a77984c8b6754e989128c3177b6af1", "../utils/capitalize");
$parcel$require("24a77984c8b6754e989128c3177b6af1", "../Paper");

var $a77984c8b6754e989128c3177b6af1$export$styles = function styles(theme) {
  var backgroundColorDefault = theme.palette.type === 'light' ? theme.palette.grey[100] : theme.palette.grey[900];
  return {
    /* Styles applied to the root element. */
    root: {
      display: 'flex',
      flexDirection: 'column',
      width: '100%',
      boxSizing: 'border-box',
      // Prevent padding issue with the Modal and fixed positioned AppBar.
      zIndex: theme.zIndex.appBar,
      flexShrink: 0
    },

    /* Styles applied to the root element if `position="fixed"`. */
    positionFixed: {
      position: 'fixed',
      top: 0,
      left: 'auto',
      right: 0
    },

    /* Styles applied to the root element if `position="absolute"`. */
    positionAbsolute: {
      position: 'absolute',
      top: 0,
      left: 'auto',
      right: 0
    },

    /* Styles applied to the root element if `position="sticky"`. */
    positionSticky: {
      position: 'sticky',
      top: 0,
      left: 'auto',
      right: 0
    },

    /* Styles applied to the root element if `position="static"`. */
    positionStatic: {
      position: 'static',
      transform: 'translateZ(0)' // Make sure we can see the elevation.

    },

    /* Styles applied to the root element if `position="relative"`. */
    positionRelative: {
      position: 'relative'
    },

    /* Styles applied to the root element if `color="default"`. */
    colorDefault: {
      backgroundColor: backgroundColorDefault,
      color: theme.palette.getContrastText(backgroundColorDefault)
    },

    /* Styles applied to the root element if `color="primary"`. */
    colorPrimary: {
      backgroundColor: theme.palette.primary.main,
      color: theme.palette.primary.contrastText
    },

    /* Styles applied to the root element if `color="secondary"`. */
    colorSecondary: {
      backgroundColor: theme.palette.secondary.main,
      color: theme.palette.secondary.contrastText
    }
  };
};

$a77984c8b6754e989128c3177b6af1$exports.styles = $a77984c8b6754e989128c3177b6af1$export$styles;
var $a77984c8b6754e989128c3177b6af1$var$AppBar = $a77984c8b6754e989128c3177b6af1$import$React.forwardRef(function AppBar(props, ref) {
  var classes = props.classes,
      className = props.className,
      _props$color = props.color,
      color = _props$color === void 0 ? 'primary' : _props$color,
      _props$position = props.position,
      position = _props$position === void 0 ? 'fixed' : _props$position,
      other = $a77984c8b6754e989128c3177b6af1$import$_objectWithoutProperties(props, ["classes", "className", "color", "position"]);
  return $a77984c8b6754e989128c3177b6af1$import$React.createElement($a77984c8b6754e989128c3177b6af1$import$Paper, $a77984c8b6754e989128c3177b6af1$import$_extends({
    square: true,
    component: "header",
    elevation: 4,
    className: $a77984c8b6754e989128c3177b6af1$import$clsx(classes.root, classes["position".concat($a77984c8b6754e989128c3177b6af1$import$capitalize(position))], className, color !== 'inherit' && classes["color".concat($a77984c8b6754e989128c3177b6af1$import$capitalize(color))], {
      fixed: 'mui-fixed'
    }[position]),
    ref: ref
  }, other));
});
"production" !== "production" ? $a77984c8b6754e989128c3177b6af1$var$AppBar.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------

  /**
   * The content of the component.
   */
  children: $a77984c8b6754e989128c3177b6af1$import$PropTypes.node,

  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: $a77984c8b6754e989128c3177b6af1$import$PropTypes.object,

  /**
   * @ignore
   */
  className: $a77984c8b6754e989128c3177b6af1$import$PropTypes.string,

  /**
   * The color of the component. It supports those theme colors that make sense for this component.
   */
  color: $a77984c8b6754e989128c3177b6af1$import$PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),

  /**
   * The positioning type. The behavior of the different options is described
   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).
   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.
   */
  position: $a77984c8b6754e989128c3177b6af1$import$PropTypes.oneOf(['absolute', 'fixed', 'relative', 'static', 'sticky'])
} : void 0;
var $a77984c8b6754e989128c3177b6af1$export$default = $a77984c8b6754e989128c3177b6af1$import$withStyles($a77984c8b6754e989128c3177b6af1$export$styles, {
  name: 'MuiAppBar'
})($a77984c8b6754e989128c3177b6af1$var$AppBar);
$a77984c8b6754e989128c3177b6af1$exports.default = $a77984c8b6754e989128c3177b6af1$export$default;