var $c5fb6054fc5d2c34ae48249b1cb77e$exports = {};
$parcel$require("55c5fb6054fc5d2c34ae48249b1cb77e", "@babel/runtime/helpers/esm/extends");
$parcel$require("55c5fb6054fc5d2c34ae48249b1cb77e", "@babel/runtime/helpers/esm/objectWithoutProperties");
$parcel$require("55c5fb6054fc5d2c34ae48249b1cb77e", "react");
$parcel$require("55c5fb6054fc5d2c34ae48249b1cb77e", "prop-types");
$parcel$require("55c5fb6054fc5d2c34ae48249b1cb77e", "clsx");
$parcel$require("55c5fb6054fc5d2c34ae48249b1cb77e", "@material-ui/utils");
$parcel$require("55c5fb6054fc5d2c34ae48249b1cb77e", "../utils/capitalize");

/**
 * @ignore - internal component.
 */
var $c5fb6054fc5d2c34ae48249b1cb77e$export$default = $c5fb6054fc5d2c34ae48249b1cb77e$import$React.forwardRef(function NativeSelectInput(props, ref) {
  var classes = props.classes,
      className = props.className,
      disabled = props.disabled,
      IconComponent = props.IconComponent,
      inputRef = props.inputRef,
      _props$variant = props.variant,
      variant = _props$variant === void 0 ? 'standard' : _props$variant,
      other = $c5fb6054fc5d2c34ae48249b1cb77e$import$_objectWithoutProperties(props, ["classes", "className", "disabled", "IconComponent", "inputRef", "variant"]);
  return $c5fb6054fc5d2c34ae48249b1cb77e$import$React.createElement($c5fb6054fc5d2c34ae48249b1cb77e$import$React.Fragment, null, $c5fb6054fc5d2c34ae48249b1cb77e$import$React.createElement("select", $c5fb6054fc5d2c34ae48249b1cb77e$import$_extends({
    className: $c5fb6054fc5d2c34ae48249b1cb77e$import$clsx(classes.root, // TODO v5: merge root and select
    classes.select, classes[variant], className, disabled && classes.disabled),
    disabled: disabled,
    ref: inputRef || ref
  }, other)), props.multiple ? null : $c5fb6054fc5d2c34ae48249b1cb77e$import$React.createElement(IconComponent, {
    className: $c5fb6054fc5d2c34ae48249b1cb77e$import$clsx(classes.icon, classes["icon".concat($c5fb6054fc5d2c34ae48249b1cb77e$import$capitalize(variant))])
  }));
});
"production" !== "production" ? $c5fb6054fc5d2c34ae48249b1cb77e$export$default.propTypes = {
  /**
   * The option elements to populate the select with.
   * Can be some `<option>` elements.
   */
  children: $c5fb6054fc5d2c34ae48249b1cb77e$import$PropTypes.node,

  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: $c5fb6054fc5d2c34ae48249b1cb77e$import$PropTypes.object.isRequired,

  /**
   * The CSS class name of the select element.
   */
  className: $c5fb6054fc5d2c34ae48249b1cb77e$import$PropTypes.string,

  /**
   * If `true`, the select will be disabled.
   */
  disabled: $c5fb6054fc5d2c34ae48249b1cb77e$import$PropTypes.bool,

  /**
   * The icon that displays the arrow.
   */
  IconComponent: $c5fb6054fc5d2c34ae48249b1cb77e$import$PropTypes.elementType,

  /**
   * Use that prop to pass a ref to the native select element.
   * @deprecated
   */
  inputRef: $c5fb6054fc5d2c34ae48249b1cb77e$import$refType,

  /**
   * @ignore
   */
  multiple: $c5fb6054fc5d2c34ae48249b1cb77e$import$PropTypes.bool,

  /**
   * Name attribute of the `select` or hidden `input` element.
   */
  name: $c5fb6054fc5d2c34ae48249b1cb77e$import$PropTypes.string,

  /**
   * Callback function fired when a menu item is selected.
   *
   * @param {object} event The event source of the callback.
   * You can pull out the new value by accessing `event.target.value` (string).
   */
  onChange: $c5fb6054fc5d2c34ae48249b1cb77e$import$PropTypes.func,

  /**
   * The input value.
   */
  value: $c5fb6054fc5d2c34ae48249b1cb77e$import$PropTypes.any,

  /**
   * The variant to use.
   */
  variant: $c5fb6054fc5d2c34ae48249b1cb77e$import$PropTypes.oneOf(['standard', 'outlined', 'filled'])
} : void 0;
$c5fb6054fc5d2c34ae48249b1cb77e$exports.default = $c5fb6054fc5d2c34ae48249b1cb77e$export$default;