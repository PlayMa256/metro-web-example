var $a82e00a2d0d01923e0a6700aea0$exports = {};
var $a82e00a2d0d01923e0a6700aea0$var$mapCacheClear = $parcel$require("58099a82e00a2d0d01923e0a6700aea0", "./_mapCacheClear"),
    $a82e00a2d0d01923e0a6700aea0$var$mapCacheDelete = $parcel$require("58099a82e00a2d0d01923e0a6700aea0", "./_mapCacheDelete"),
    $a82e00a2d0d01923e0a6700aea0$var$mapCacheGet = $parcel$require("58099a82e00a2d0d01923e0a6700aea0", "./_mapCacheGet"),
    $a82e00a2d0d01923e0a6700aea0$var$mapCacheHas = $parcel$require("58099a82e00a2d0d01923e0a6700aea0", "./_mapCacheHas"),
    $a82e00a2d0d01923e0a6700aea0$var$mapCacheSet = $parcel$require("58099a82e00a2d0d01923e0a6700aea0", "./_mapCacheSet");
/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */

function $a82e00a2d0d01923e0a6700aea0$var$MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;
  this.clear();

  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
} // Add methods to `MapCache`.


$a82e00a2d0d01923e0a6700aea0$var$MapCache.prototype.clear = $a82e00a2d0d01923e0a6700aea0$var$mapCacheClear;
$a82e00a2d0d01923e0a6700aea0$var$MapCache.prototype['delete'] = $a82e00a2d0d01923e0a6700aea0$var$mapCacheDelete;
$a82e00a2d0d01923e0a6700aea0$var$MapCache.prototype.get = $a82e00a2d0d01923e0a6700aea0$var$mapCacheGet;
$a82e00a2d0d01923e0a6700aea0$var$MapCache.prototype.has = $a82e00a2d0d01923e0a6700aea0$var$mapCacheHas;
$a82e00a2d0d01923e0a6700aea0$var$MapCache.prototype.set = $a82e00a2d0d01923e0a6700aea0$var$mapCacheSet;
$a82e00a2d0d01923e0a6700aea0$exports = $a82e00a2d0d01923e0a6700aea0$var$MapCache;