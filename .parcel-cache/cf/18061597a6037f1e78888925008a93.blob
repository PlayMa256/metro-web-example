var $fa704aea845859f3b3f9369577611e6b$exports = {};
$parcel$require("fa704aea845859f3b3f9369577611e6b", "lodash/get");
$parcel$require("fa704aea845859f3b3f9369577611e6b", "lodash/isArray");
$parcel$require("fa704aea845859f3b3f9369577611e6b", "lodash/isNaN");
$parcel$require("fa704aea845859f3b3f9369577611e6b", "lodash/isNumber");
$parcel$require("fa704aea845859f3b3f9369577611e6b", "lodash/isString");

var $fa704aea845859f3b3f9369577611e6b$export$mathSign = function mathSign(value) {
  if (value === 0) {
    return 0;
  }

  if (value > 0) {
    return 1;
  }

  return -1;
};

$fa704aea845859f3b3f9369577611e6b$exports.mathSign = $fa704aea845859f3b3f9369577611e6b$export$mathSign;

var $fa704aea845859f3b3f9369577611e6b$export$isPercent = function isPercent(value) {
  return $fa704aea845859f3b3f9369577611e6b$import$_isString(value) && value.indexOf('%') === value.length - 1;
};

$fa704aea845859f3b3f9369577611e6b$exports.isPercent = $fa704aea845859f3b3f9369577611e6b$export$isPercent;

var $fa704aea845859f3b3f9369577611e6b$export$isNumber = function isNumber(value) {
  return $fa704aea845859f3b3f9369577611e6b$import$_isNumber(value) && !$fa704aea845859f3b3f9369577611e6b$import$_isNaN(value);
};

$fa704aea845859f3b3f9369577611e6b$exports.isNumber = $fa704aea845859f3b3f9369577611e6b$export$isNumber;

var $fa704aea845859f3b3f9369577611e6b$export$isNumOrStr = function isNumOrStr(value) {
  return $fa704aea845859f3b3f9369577611e6b$export$isNumber(value) || $fa704aea845859f3b3f9369577611e6b$import$_isString(value);
};

$fa704aea845859f3b3f9369577611e6b$exports.isNumOrStr = $fa704aea845859f3b3f9369577611e6b$export$isNumOrStr;
var $fa704aea845859f3b3f9369577611e6b$var$idCounter = 0;

var $fa704aea845859f3b3f9369577611e6b$export$uniqueId = function uniqueId(prefix) {
  var id = ++$fa704aea845859f3b3f9369577611e6b$var$idCounter;
  return "".concat(prefix || '').concat(id);
};
/**
 * Get percent value of a total value
 * @param {Number|String} percent A percent
 * @param {Number} totalValue     Total value
 * @param {NUmber} defaultValue   The value returned when percent is undefined or invalid
 * @param {Boolean} validate      If set to be true, the result will be validated
 * @return {Number} value
 */


$fa704aea845859f3b3f9369577611e6b$exports.uniqueId = $fa704aea845859f3b3f9369577611e6b$export$uniqueId;

var $fa704aea845859f3b3f9369577611e6b$export$getPercentValue = function getPercentValue(percent, totalValue) {
  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  var validate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

  if (!$fa704aea845859f3b3f9369577611e6b$export$isNumber(percent) && !$fa704aea845859f3b3f9369577611e6b$import$_isString(percent)) {
    return defaultValue;
  }

  var value;

  if ($fa704aea845859f3b3f9369577611e6b$export$isPercent(percent)) {
    var index = percent.indexOf('%');
    value = totalValue * parseFloat(percent.slice(0, index)) / 100;
  } else {
    value = +percent;
  }

  if ($fa704aea845859f3b3f9369577611e6b$import$_isNaN(value)) {
    value = defaultValue;
  }

  if (validate && value > totalValue) {
    value = totalValue;
  }

  return value;
};

$fa704aea845859f3b3f9369577611e6b$exports.getPercentValue = $fa704aea845859f3b3f9369577611e6b$export$getPercentValue;

var $fa704aea845859f3b3f9369577611e6b$export$getAnyElementOfObject = function getAnyElementOfObject(obj) {
  if (!obj) {
    return null;
  }

  var keys = Object.keys(obj);

  if (keys && keys.length) {
    return obj[keys[0]];
  }

  return null;
};

$fa704aea845859f3b3f9369577611e6b$exports.getAnyElementOfObject = $fa704aea845859f3b3f9369577611e6b$export$getAnyElementOfObject;

var $fa704aea845859f3b3f9369577611e6b$export$hasDuplicate = function hasDuplicate(ary) {
  if (!$fa704aea845859f3b3f9369577611e6b$import$_isArray(ary)) {
    return false;
  }

  var len = ary.length;
  var cache = {};

  for (var i = 0; i < len; i++) {
    if (!cache[ary[i]]) {
      cache[ary[i]] = true;
    } else {
      return true;
    }
  }

  return false;
};

$fa704aea845859f3b3f9369577611e6b$exports.hasDuplicate = $fa704aea845859f3b3f9369577611e6b$export$hasDuplicate;

var $fa704aea845859f3b3f9369577611e6b$export$interpolateNumber = function interpolateNumber(numberA, numberB) {
  if ($fa704aea845859f3b3f9369577611e6b$export$isNumber(numberA) && $fa704aea845859f3b3f9369577611e6b$export$isNumber(numberB)) {
    return function (t) {
      return numberA + t * (numberB - numberA);
    };
  }

  return function () {
    return numberB;
  };
};

$fa704aea845859f3b3f9369577611e6b$exports.interpolateNumber = $fa704aea845859f3b3f9369577611e6b$export$interpolateNumber;

var $fa704aea845859f3b3f9369577611e6b$export$findEntryInArray = function findEntryInArray(ary, specifiedKey, specifiedValue) {
  if (!ary || !ary.length) {
    return null;
  }

  return ary.find(function (entry) {
    return entry && (typeof specifiedKey === 'function' ? specifiedKey(entry) : $fa704aea845859f3b3f9369577611e6b$import$_get(entry, specifiedKey)) === specifiedValue;
  });
};
/**
 * The least square linear regression
 * @param {Array} data The array of points
 * @returns {Object} The domain of x, and the parameter of linear function
 */


$fa704aea845859f3b3f9369577611e6b$exports.findEntryInArray = $fa704aea845859f3b3f9369577611e6b$export$findEntryInArray;

var $fa704aea845859f3b3f9369577611e6b$export$getLinearRegression = function getLinearRegression(data) {
  if (!data || !data.length) {
    return null;
  }

  var len = data.length;
  var xsum = 0;
  var ysum = 0;
  var xysum = 0;
  var xxsum = 0;
  var xmin = Infinity;
  var xmax = -Infinity;

  for (var i = 0; i < len; i++) {
    xsum += data[i].cx;
    ysum += data[i].cy;
    xysum += data[i].cx * data[i].cy;
    xxsum += data[i].cx * data[i].cx;
    xmin = Math.min(xmin, data[i].cx);
    xmax = Math.max(xmax, data[i].cx);
  }

  var a = len * xxsum !== xsum * xsum ? (len * xysum - xsum * ysum) / (len * xxsum - xsum * xsum) : 0;
  return {
    xmin: xmin,
    xmax: xmax,
    a: a,
    b: (ysum - a * xsum) / len
  };
};

$fa704aea845859f3b3f9369577611e6b$exports.getLinearRegression = $fa704aea845859f3b3f9369577611e6b$export$getLinearRegression;