var $fee1d29d88e901d005dffd6e968b635$exports = {};
Object.defineProperty($fee1d29d88e901d005dffd6e968b635$exports, "__esModule", {
  value: true
});
var $fee1d29d88e901d005dffd6e968b635$export$default = void 0;
$fee1d29d88e901d005dffd6e968b635$exports.default = $fee1d29d88e901d005dffd6e968b635$export$default;
var $fee1d29d88e901d005dffd6e968b635$var$_decimal = $fee1d29d88e901d005dffd6e968b635$var$_interopRequireDefault($parcel$require("2fee1d29d88e901d005dffd6e968b635", "decimal.js-light"));
var $fee1d29d88e901d005dffd6e968b635$var$_utils = $parcel$require("2fee1d29d88e901d005dffd6e968b635", "./utils");

function $fee1d29d88e901d005dffd6e968b635$var$_interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
/**
 * @fileOverview 一些公用的运算方法
 * @author xile611
 * @date 2015-09-17
 */

/**
 * 获取数值的位数
 * 其中绝对值属于区间[0.1, 1)， 得到的值为0
 * 绝对值属于区间[0.01, 0.1)，得到的位数为 -1
 * 绝对值属于区间[0.001, 0.01)，得到的位数为 -2
 *
 * @param  {Number} value 数值
 * @return {Integer} 位数
 */


function $fee1d29d88e901d005dffd6e968b635$var$getDigitCount(value) {
  var result;

  if (value === 0) {
    result = 1;
  } else {
    result = Math.floor(new $fee1d29d88e901d005dffd6e968b635$var$_decimal.default(value).abs().log(10).toNumber()) + 1;
  }

  return result;
}
/**
 * 按照固定的步长获取[start, end)这个区间的数据
 * 并且需要处理js计算精度的问题
 *
 * @param  {Decimal} start 起点
 * @param  {Decimal} end   终点，不包含该值
 * @param  {Decimal} step  步长
 * @return {Array}         若干数值
 */


function $fee1d29d88e901d005dffd6e968b635$var$rangeStep(start, end, step) {
  var num = new $fee1d29d88e901d005dffd6e968b635$var$_decimal.default(start);
  var result = [];

  while (num.lt(end)) {
    result.push(num.toNumber());
    num = num.add(step);
  }

  return result;
}
/**
 * 对数值进行线性插值
 *
 * @param  {Number} a  定义域的极点
 * @param  {Number} b  定义域的极点
 * @param  {Number} t  [0, 1]内的某个值
 * @return {Number}    定义域内的某个值
 */


var $fee1d29d88e901d005dffd6e968b635$var$interpolateNumber = (0, $fee1d29d88e901d005dffd6e968b635$var$_utils.curry)(function (a, b, t) {
  var newA = +a;
  var newB = +b;
  return newA + t * (newB - newA);
});
/**
 * 线性插值的逆运算
 *
 * @param  {Number} a 定义域的极点
 * @param  {Number} b 定义域的极点
 * @param  {Number} x 可以认为是插值后的一个输出值
 * @return {Number}   当x在 a ~ b这个范围内时，返回值属于[0, 1]
 */

var $fee1d29d88e901d005dffd6e968b635$var$uninterpolateNumber = (0, $fee1d29d88e901d005dffd6e968b635$var$_utils.curry)(function (a, b, x) {
  var diff = b - +a;
  diff = diff || Infinity;
  return (x - a) / diff;
});
/**
 * 线性插值的逆运算，并且有截断的操作
 *
 * @param  {Number} a 定义域的极点
 * @param  {Number} b 定义域的极点
 * @param  {Number} x 可以认为是插值后的一个输出值
 * @return {Number}   当x在 a ~ b这个区间内时，返回值属于[0, 1]，
 * 当x不在 a ~ b这个区间时，会截断到 a ~ b 这个区间
 */

var $fee1d29d88e901d005dffd6e968b635$var$uninterpolateTruncation = (0, $fee1d29d88e901d005dffd6e968b635$var$_utils.curry)(function (a, b, x) {
  var diff = b - +a;
  diff = diff || Infinity;
  return Math.max(0, Math.min(1, (x - a) / diff));
});
var $fee1d29d88e901d005dffd6e968b635$var$_default = {
  rangeStep: $fee1d29d88e901d005dffd6e968b635$var$rangeStep,
  getDigitCount: $fee1d29d88e901d005dffd6e968b635$var$getDigitCount,
  interpolateNumber: $fee1d29d88e901d005dffd6e968b635$var$interpolateNumber,
  uninterpolateNumber: $fee1d29d88e901d005dffd6e968b635$var$uninterpolateNumber,
  uninterpolateTruncation: $fee1d29d88e901d005dffd6e968b635$var$uninterpolateTruncation
};
$fee1d29d88e901d005dffd6e968b635$export$default = $fee1d29d88e901d005dffd6e968b635$var$_default
$fee1d29d88e901d005dffd6e968b635$exports.default = $fee1d29d88e901d005dffd6e968b635$export$default;