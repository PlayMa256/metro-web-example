var $e798d6ffe2d32fbf6b8f3c975dc096b$exports = {};
$parcel$require("5e798d6ffe2d32fbf6b8f3c975dc096b", "@babel/runtime/helpers/esm/extends");
$parcel$require("5e798d6ffe2d32fbf6b8f3c975dc096b", "@babel/runtime/helpers/esm/objectWithoutProperties");
$parcel$require("5e798d6ffe2d32fbf6b8f3c975dc096b", "react");
$parcel$require("5e798d6ffe2d32fbf6b8f3c975dc096b", "prop-types");
$parcel$require("5e798d6ffe2d32fbf6b8f3c975dc096b", "clsx");
$parcel$require("5e798d6ffe2d32fbf6b8f3c975dc096b", "../styles/withStyles");
$parcel$require("5e798d6ffe2d32fbf6b8f3c975dc096b", "../Paper");
$parcel$require("5e798d6ffe2d32fbf6b8f3c975dc096b", "../StepConnector");
var $e798d6ffe2d32fbf6b8f3c975dc096b$export$styles = {
  /* Styles applied to the root element. */
  root: {
    display: 'flex',
    padding: 24
  },

  /* Styles applied to the root element if `orientation="horizontal"`. */
  horizontal: {
    flexDirection: 'row',
    alignItems: 'center'
  },

  /* Styles applied to the root element if `orientation="vertical"`. */
  vertical: {
    flexDirection: 'column'
  },

  /* Styles applied to the root element if `alternativeLabel={true}`. */
  alternativeLabel: {
    alignItems: 'flex-start'
  }
};
$e798d6ffe2d32fbf6b8f3c975dc096b$exports.styles = $e798d6ffe2d32fbf6b8f3c975dc096b$export$styles;
var $e798d6ffe2d32fbf6b8f3c975dc096b$var$defaultConnector = $e798d6ffe2d32fbf6b8f3c975dc096b$import$React.createElement($e798d6ffe2d32fbf6b8f3c975dc096b$import$StepConnector, null);
var $e798d6ffe2d32fbf6b8f3c975dc096b$var$Stepper = $e798d6ffe2d32fbf6b8f3c975dc096b$import$React.forwardRef(function Stepper(props, ref) {
  var _props$activeStep = props.activeStep,
      activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep,
      _props$alternativeLab = props.alternativeLabel,
      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,
      children = props.children,
      classes = props.classes,
      classNameProp = props.className,
      _props$connector = props.connector,
      connectorProp = _props$connector === void 0 ? $e798d6ffe2d32fbf6b8f3c975dc096b$var$defaultConnector : _props$connector,
      _props$nonLinear = props.nonLinear,
      nonLinear = _props$nonLinear === void 0 ? false : _props$nonLinear,
      _props$orientation = props.orientation,
      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,
      other = $e798d6ffe2d32fbf6b8f3c975dc096b$import$_objectWithoutProperties(props, ["activeStep", "alternativeLabel", "children", "classes", "className", "connector", "nonLinear", "orientation"]);
  var className = $e798d6ffe2d32fbf6b8f3c975dc096b$import$clsx(classes.root, classes[orientation], classNameProp, alternativeLabel && classes.alternativeLabel);
  var connector = $e798d6ffe2d32fbf6b8f3c975dc096b$import$React.isValidElement(connectorProp) ? $e798d6ffe2d32fbf6b8f3c975dc096b$import$React.cloneElement(connectorProp, {
    orientation: orientation
  }) : null;
  var childrenArray = $e798d6ffe2d32fbf6b8f3c975dc096b$import$React.Children.toArray(children);
  var steps = childrenArray.map(function (step, index) {
    var controlProps = {
      alternativeLabel: alternativeLabel,
      connector: connectorProp,
      last: index + 1 === childrenArray.length,
      orientation: orientation
    };
    var state = {
      index: index,
      active: false,
      completed: false,
      disabled: false
    };

    if (activeStep === index) {
      state.active = true;
    } else if (!nonLinear && activeStep > index) {
      state.completed = true;
    } else if (!nonLinear && activeStep < index) {
      state.disabled = true;
    }

    return [!alternativeLabel && connector && index !== 0 && $e798d6ffe2d32fbf6b8f3c975dc096b$import$React.cloneElement(connector, $e798d6ffe2d32fbf6b8f3c975dc096b$import$_extends({
      key: index
    }, state)), $e798d6ffe2d32fbf6b8f3c975dc096b$import$React.cloneElement(step, $e798d6ffe2d32fbf6b8f3c975dc096b$import$_extends({}, controlProps, {}, state, {}, step.props))];
  });
  return $e798d6ffe2d32fbf6b8f3c975dc096b$import$React.createElement($e798d6ffe2d32fbf6b8f3c975dc096b$import$Paper, $e798d6ffe2d32fbf6b8f3c975dc096b$import$_extends({
    square: true,
    elevation: 0,
    className: className,
    ref: ref
  }, other), steps);
});
"production" !== "production" ? $e798d6ffe2d32fbf6b8f3c975dc096b$var$Stepper.propTypes = {
  /**
   * Set the active step (zero based index).
   */
  activeStep: $e798d6ffe2d32fbf6b8f3c975dc096b$import$PropTypes.number,

  /**
   * If set to 'true' and orientation is horizontal,
   * then the step label will be positioned under the icon.
   */
  alternativeLabel: $e798d6ffe2d32fbf6b8f3c975dc096b$import$PropTypes.bool,

  /**
   * Two or more `<Step />` components.
   */
  children: $e798d6ffe2d32fbf6b8f3c975dc096b$import$PropTypes.node.isRequired,

  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: $e798d6ffe2d32fbf6b8f3c975dc096b$import$PropTypes.object.isRequired,

  /**
   * @ignore
   */
  className: $e798d6ffe2d32fbf6b8f3c975dc096b$import$PropTypes.string,

  /**
   * An element to be placed between each step.
   */
  connector: $e798d6ffe2d32fbf6b8f3c975dc096b$import$PropTypes.element,

  /**
   * If set the `Stepper` will not assist in controlling steps for linear flow.
   */
  nonLinear: $e798d6ffe2d32fbf6b8f3c975dc096b$import$PropTypes.bool,

  /**
   * The stepper orientation (layout flow direction).
   */
  orientation: $e798d6ffe2d32fbf6b8f3c975dc096b$import$PropTypes.oneOf(['horizontal', 'vertical'])
} : void 0;
var $e798d6ffe2d32fbf6b8f3c975dc096b$export$default = $e798d6ffe2d32fbf6b8f3c975dc096b$import$withStyles($e798d6ffe2d32fbf6b8f3c975dc096b$export$styles, {
  name: 'MuiStepper'
})($e798d6ffe2d32fbf6b8f3c975dc096b$var$Stepper);
$e798d6ffe2d32fbf6b8f3c975dc096b$exports.default = $e798d6ffe2d32fbf6b8f3c975dc096b$export$default;