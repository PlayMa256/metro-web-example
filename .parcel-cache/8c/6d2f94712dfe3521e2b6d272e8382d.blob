var $b8efe8f7e19efcd9fc583194ba3aa$exports = {};
$parcel$require("669b8efe8f7e19efcd9fc583194ba3aa", "d3-array");
$parcel$require("669b8efe8f7e19efcd9fc583194ba3aa", "./continuous");
$parcel$require("669b8efe8f7e19efcd9fc583194ba3aa", "./init");
$parcel$require("669b8efe8f7e19efcd9fc583194ba3aa", "./tickFormat");

function $b8efe8f7e19efcd9fc583194ba3aa$export$linearish(scale) {
  var domain = scale.domain;

  scale.ticks = function (count) {
    var d = domain();
    return $b8efe8f7e19efcd9fc583194ba3aa$import$ticks(d[0], d[d.length - 1], count == null ? 10 : count);
  };

  scale.tickFormat = function (count, specifier) {
    var d = domain();
    return $b8efe8f7e19efcd9fc583194ba3aa$import$tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };

  scale.nice = function (count) {
    if (count == null) count = 10;
    var d = domain(),
        i0 = 0,
        i1 = d.length - 1,
        start = d[i0],
        stop = d[i1],
        step;

    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }

    step = $b8efe8f7e19efcd9fc583194ba3aa$import$tickIncrement(start, stop, count);

    if (step > 0) {
      start = Math.floor(start / step) * step;
      stop = Math.ceil(stop / step) * step;
      step = $b8efe8f7e19efcd9fc583194ba3aa$import$tickIncrement(start, stop, count);
    } else if (step < 0) {
      start = Math.ceil(start * step) / step;
      stop = Math.floor(stop * step) / step;
      step = $b8efe8f7e19efcd9fc583194ba3aa$import$tickIncrement(start, stop, count);
    }

    if (step > 0) {
      d[i0] = Math.floor(start / step) * step;
      d[i1] = Math.ceil(stop / step) * step;
      domain(d);
    } else if (step < 0) {
      d[i0] = Math.ceil(start * step) / step;
      d[i1] = Math.floor(stop * step) / step;
      domain(d);
    }

    return scale;
  };

  return scale;
}

$b8efe8f7e19efcd9fc583194ba3aa$exports.linearish = $b8efe8f7e19efcd9fc583194ba3aa$export$linearish;

function $b8efe8f7e19efcd9fc583194ba3aa$export$default() {
  var scale = $b8efe8f7e19efcd9fc583194ba3aa$import$continuous($b8efe8f7e19efcd9fc583194ba3aa$import$identity, $b8efe8f7e19efcd9fc583194ba3aa$import$identity);

  scale.copy = function () {
    return $b8efe8f7e19efcd9fc583194ba3aa$import$copy(scale, $b8efe8f7e19efcd9fc583194ba3aa$export$default());
  };

  $b8efe8f7e19efcd9fc583194ba3aa$import$initRange.apply(scale, arguments);
  return $b8efe8f7e19efcd9fc583194ba3aa$export$linearish(scale);
}

$b8efe8f7e19efcd9fc583194ba3aa$exports.default = $b8efe8f7e19efcd9fc583194ba3aa$export$default;