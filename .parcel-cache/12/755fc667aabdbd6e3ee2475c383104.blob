var $f7d5dcb42075b9c683f58860ca6706$exports = {};
$parcel$require("82f7d5dcb42075b9c683f58860ca6706", "react");
$parcel$require("82f7d5dcb42075b9c683f58860ca6706", "react-dom");
$parcel$require("82f7d5dcb42075b9c683f58860ca6706", "prop-types");
$parcel$require("82f7d5dcb42075b9c683f58860ca6706", "@material-ui/utils");
$parcel$require("82f7d5dcb42075b9c683f58860ca6706", "../utils/setRef");
$parcel$require("82f7d5dcb42075b9c683f58860ca6706", "../utils/useForkRef");

function $f7d5dcb42075b9c683f58860ca6706$var$getContainer(container) {
  container = typeof container === 'function' ? container() : container; // #StrictMode ready

  return $f7d5dcb42075b9c683f58860ca6706$import$ReactDOM.findDOMNode(container);
}

var $f7d5dcb42075b9c683f58860ca6706$var$useEnhancedEffect = typeof window !== 'undefined' ? $f7d5dcb42075b9c683f58860ca6706$import$React.useLayoutEffect : $f7d5dcb42075b9c683f58860ca6706$import$React.useEffect;
/**
 * Portals provide a first-class way to render children into a DOM node
 * that exists outside the DOM hierarchy of the parent component.
 */

var $f7d5dcb42075b9c683f58860ca6706$export$default = $f7d5dcb42075b9c683f58860ca6706$import$React.forwardRef(function Portal(props, ref) {
  var children = props.children,
      container = props.container,
      _props$disablePortal = props.disablePortal,
      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,
      onRendered = props.onRendered;

  var _React$useState = $f7d5dcb42075b9c683f58860ca6706$import$React.useState(null),
      mountNode = _React$useState[0],
      setMountNode = _React$useState[1];

  var handleRef = $f7d5dcb42075b9c683f58860ca6706$import$useForkRef(children.ref, ref);
  $f7d5dcb42075b9c683f58860ca6706$var$useEnhancedEffect(function () {
    if (!disablePortal) {
      setMountNode($f7d5dcb42075b9c683f58860ca6706$var$getContainer(container) || document.body);
    }
  }, [container, disablePortal]);
  $f7d5dcb42075b9c683f58860ca6706$var$useEnhancedEffect(function () {
    if (mountNode && !disablePortal) {
      $f7d5dcb42075b9c683f58860ca6706$import$setRef(ref, mountNode);
      return function () {
        $f7d5dcb42075b9c683f58860ca6706$import$setRef(ref, null);
      };
    }

    return undefined;
  }, [ref, mountNode, disablePortal]);
  $f7d5dcb42075b9c683f58860ca6706$var$useEnhancedEffect(function () {
    if (onRendered && (mountNode || disablePortal)) {
      onRendered();
    }
  }, [onRendered, mountNode, disablePortal]);

  if (disablePortal) {
    $f7d5dcb42075b9c683f58860ca6706$import$React.Children.only(children);
    return $f7d5dcb42075b9c683f58860ca6706$import$React.cloneElement(children, {
      ref: handleRef
    });
  }

  return mountNode ? $f7d5dcb42075b9c683f58860ca6706$import$ReactDOM.createPortal(children, mountNode) : mountNode;
});
"production" !== "production" ? $f7d5dcb42075b9c683f58860ca6706$export$default.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------

  /**
   * The children to render into the `container`.
   */
  children: $f7d5dcb42075b9c683f58860ca6706$import$PropTypes.node,

  /**
   * A node, component instance, or function that returns either.
   * The `container` will have the portal children appended to it.
   * By default, it uses the body of the top-level document object,
   * so it's simply `document.body` most of the time.
   */
  container: $f7d5dcb42075b9c683f58860ca6706$import$PropTypes.oneOfType([$f7d5dcb42075b9c683f58860ca6706$import$PropTypes.func, $f7d5dcb42075b9c683f58860ca6706$import$PropTypes.instanceOf($f7d5dcb42075b9c683f58860ca6706$import$React.Component), $f7d5dcb42075b9c683f58860ca6706$import$PropTypes.instanceOf(typeof Element === 'undefined' ? Object : Element)]),

  /**
   * Disable the portal behavior.
   * The children stay within it's parent DOM hierarchy.
   */
  disablePortal: $f7d5dcb42075b9c683f58860ca6706$import$PropTypes.bool,

  /**
   * Callback fired once the children has been mounted into the `container`.
   *
   * This prop will be deprecated and removed in v5, the ref can be used instead.
   */
  onRendered: $f7d5dcb42075b9c683f58860ca6706$import$PropTypes.func
} : void 0;

if ("production" !== 'production') {
  // eslint-disable-next-line
  $f7d5dcb42075b9c683f58860ca6706$export$default['propTypes' + ''] = $f7d5dcb42075b9c683f58860ca6706$import$exactProp($f7d5dcb42075b9c683f58860ca6706$export$default.propTypes);
}

$f7d5dcb42075b9c683f58860ca6706$exports.default = $f7d5dcb42075b9c683f58860ca6706$export$default;