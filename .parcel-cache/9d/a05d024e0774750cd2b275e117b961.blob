var $c1e779b219cb5512a2b25847a47c5f0$exports = {};
$parcel$require("9c1e779b219cb5512a2b25847a47c5f0", "@babel/runtime/helpers/esm/extends");
$parcel$require("9c1e779b219cb5512a2b25847a47c5f0", "@babel/runtime/helpers/esm/objectWithoutProperties");
$parcel$require("9c1e779b219cb5512a2b25847a47c5f0", "@babel/runtime/helpers/esm/toConsumableArray");
$parcel$require("9c1e779b219cb5512a2b25847a47c5f0", "react");
$parcel$require("9c1e779b219cb5512a2b25847a47c5f0", "prop-types");
$parcel$require("9c1e779b219cb5512a2b25847a47c5f0", "clsx");
$parcel$require("9c1e779b219cb5512a2b25847a47c5f0", "../utils/debounce");
$parcel$require("9c1e779b219cb5512a2b25847a47c5f0", "../styles/withStyles");
$parcel$require("9c1e779b219cb5512a2b25847a47c5f0", "../utils/isMuiElement");
var $c1e779b219cb5512a2b25847a47c5f0$export$styles = {
  /* Styles applied to the root element. */
  root: {
    boxSizing: 'border-box',
    flexShrink: 0
  },

  /* Styles applied to the `div` element that wraps the children. */
  tile: {
    position: 'relative',
    display: 'block',
    // In case it's not rendered with a div.
    height: '100%',
    overflow: 'hidden'
  },

  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */
  imgFullHeight: {
    height: '100%',
    transform: 'translateX(-50%)',
    position: 'relative',
    left: '50%'
  },

  /* Styles applied to an `img` element child, if needed to ensure it covers the tile. */
  imgFullWidth: {
    width: '100%',
    position: 'relative',
    transform: 'translateY(-50%)',
    top: '50%'
  }
};
$c1e779b219cb5512a2b25847a47c5f0$exports.styles = $c1e779b219cb5512a2b25847a47c5f0$export$styles;

var $c1e779b219cb5512a2b25847a47c5f0$var$fit = function fit(imgEl, classes) {
  if (!imgEl || !imgEl.complete) {
    return;
  }

  if (imgEl.width / imgEl.height > imgEl.parentNode.offsetWidth / imgEl.parentNode.offsetHeight) {
    var _imgEl$classList, _imgEl$classList2;

    (_imgEl$classList = imgEl.classList).remove.apply(_imgEl$classList, $c1e779b219cb5512a2b25847a47c5f0$import$_toConsumableArray(classes.imgFullWidth.split(' ')));

    (_imgEl$classList2 = imgEl.classList).add.apply(_imgEl$classList2, $c1e779b219cb5512a2b25847a47c5f0$import$_toConsumableArray(classes.imgFullHeight.split(' ')));
  } else {
    var _imgEl$classList3, _imgEl$classList4;

    (_imgEl$classList3 = imgEl.classList).remove.apply(_imgEl$classList3, $c1e779b219cb5512a2b25847a47c5f0$import$_toConsumableArray(classes.imgFullHeight.split(' ')));

    (_imgEl$classList4 = imgEl.classList).add.apply(_imgEl$classList4, $c1e779b219cb5512a2b25847a47c5f0$import$_toConsumableArray(classes.imgFullWidth.split(' ')));
  }
};

function $c1e779b219cb5512a2b25847a47c5f0$var$ensureImageCover(imgEl, classes) {
  if (!imgEl) {
    return;
  }

  if (imgEl.complete) {
    $c1e779b219cb5512a2b25847a47c5f0$var$fit(imgEl, classes);
  } else {
    imgEl.addEventListener('load', function () {
      $c1e779b219cb5512a2b25847a47c5f0$var$fit(imgEl, classes);
    });
  }
}

var $c1e779b219cb5512a2b25847a47c5f0$var$GridListTile = $c1e779b219cb5512a2b25847a47c5f0$import$React.forwardRef(function GridListTile(props, ref) {
  // cols rows default values are for docs only
  var children = props.children,
      classes = props.classes,
      className = props.className,
      _props$cols = props.cols,
      cols = _props$cols === void 0 ? 1 : _props$cols,
      _props$component = props.component,
      Component = _props$component === void 0 ? 'li' : _props$component,
      _props$rows = props.rows,
      rows = _props$rows === void 0 ? 1 : _props$rows,
      other = $c1e779b219cb5512a2b25847a47c5f0$import$_objectWithoutProperties(props, ["children", "classes", "className", "cols", "component", "rows"]);
  var imgRef = $c1e779b219cb5512a2b25847a47c5f0$import$React.useRef(null);
  $c1e779b219cb5512a2b25847a47c5f0$import$React.useEffect(function () {
    $c1e779b219cb5512a2b25847a47c5f0$var$ensureImageCover(imgRef.current, classes);
  });
  $c1e779b219cb5512a2b25847a47c5f0$import$React.useEffect(function () {
    var handleResize = $c1e779b219cb5512a2b25847a47c5f0$import$debounce(function () {
      $c1e779b219cb5512a2b25847a47c5f0$var$fit(imgRef.current, classes);
    });
    window.addEventListener('resize', handleResize);
    return function () {
      handleResize.clear();
      window.removeEventListener('resize', handleResize);
    };
  }, [classes]);
  return $c1e779b219cb5512a2b25847a47c5f0$import$React.createElement(Component, $c1e779b219cb5512a2b25847a47c5f0$import$_extends({
    className: $c1e779b219cb5512a2b25847a47c5f0$import$clsx(classes.root, className),
    ref: ref
  }, other), $c1e779b219cb5512a2b25847a47c5f0$import$React.createElement("div", {
    className: classes.tile
  }, $c1e779b219cb5512a2b25847a47c5f0$import$React.Children.map(children, function (child) {
    if (!$c1e779b219cb5512a2b25847a47c5f0$import$React.isValidElement(child)) {
      return null;
    }

    if (child.type === 'img' || $c1e779b219cb5512a2b25847a47c5f0$import$isMuiElement(child, ['Image'])) {
      return $c1e779b219cb5512a2b25847a47c5f0$import$React.cloneElement(child, {
        ref: imgRef
      });
    }

    return child;
  })));
});
"production" !== "production" ? $c1e779b219cb5512a2b25847a47c5f0$var$GridListTile.propTypes = {
  /**
   * Theoretically you can pass any node as children, but the main use case is to pass an img,
   * in which case GridListTile takes care of making the image "cover" available space
   * (similar to `background-size: cover` or to `object-fit: cover`).
   */
  children: $c1e779b219cb5512a2b25847a47c5f0$import$PropTypes.node,

  /**
   * Override or extend the styles applied to the component.
   * See [CSS API](#css) below for more details.
   */
  classes: $c1e779b219cb5512a2b25847a47c5f0$import$PropTypes.object.isRequired,

  /**
   * @ignore
   */
  className: $c1e779b219cb5512a2b25847a47c5f0$import$PropTypes.string,

  /**
   * Width of the tile in number of grid cells.
   */
  cols: $c1e779b219cb5512a2b25847a47c5f0$import$PropTypes.number,

  /**
   * The component used for the root node.
   * Either a string to use a DOM element or a component.
   */
  component: $c1e779b219cb5512a2b25847a47c5f0$import$PropTypes.elementType,

  /**
   * Height of the tile in number of grid cells.
   */
  rows: $c1e779b219cb5512a2b25847a47c5f0$import$PropTypes.number
} : void 0;
var $c1e779b219cb5512a2b25847a47c5f0$export$default = $c1e779b219cb5512a2b25847a47c5f0$import$withStyles($c1e779b219cb5512a2b25847a47c5f0$export$styles, {
  name: 'MuiGridListTile'
})($c1e779b219cb5512a2b25847a47c5f0$var$GridListTile);
$c1e779b219cb5512a2b25847a47c5f0$exports.default = $c1e779b219cb5512a2b25847a47c5f0$export$default;