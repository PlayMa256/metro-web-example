var $a92479e86a9ffd97d0852d513f6ce34$exports = {};
$parcel$require("1a92479e86a9ffd97d0852d513f6ce34", "react");
$parcel$require("1a92479e86a9ffd97d0852d513f6ce34", "prop-types");
$parcel$require("1a92479e86a9ffd97d0852d513f6ce34", "@material-ui/utils");
var $a92479e86a9ffd97d0852d513f6ce34$var$useEnhancedEffect = typeof window !== 'undefined' && "production" !== 'test' ? $a92479e86a9ffd97d0852d513f6ce34$import$React.useLayoutEffect : $a92479e86a9ffd97d0852d513f6ce34$import$React.useEffect;
/**
 * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).
 *
 * This component can be useful in a variety of situations:
 * - Escape hatch for broken dependencies not supporting SSR.
 * - Improve the time-to-first paint on the client by only rendering above the fold.
 * - Reduce the rendering time on the server.
 * - Under too heavy server load, you can turn on service degradation.
 */

function $a92479e86a9ffd97d0852d513f6ce34$export$default(props) {
  var children = props.children,
      _props$defer = props.defer,
      defer = _props$defer === void 0 ? false : _props$defer,
      _props$fallback = props.fallback,
      fallback = _props$fallback === void 0 ? null : _props$fallback;

  var _React$useState = $a92479e86a9ffd97d0852d513f6ce34$import$React.useState(false),
      mountedState = _React$useState[0],
      setMountedState = _React$useState[1];

  $a92479e86a9ffd97d0852d513f6ce34$var$useEnhancedEffect(function () {
    if (!defer) {
      setMountedState(true);
    }
  }, [defer]);
  $a92479e86a9ffd97d0852d513f6ce34$import$React.useEffect(function () {
    if (defer) {
      setMountedState(true);
    }
  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.

  return $a92479e86a9ffd97d0852d513f6ce34$import$React.createElement($a92479e86a9ffd97d0852d513f6ce34$import$React.Fragment, null, mountedState ? children : fallback);
}

"production" !== "production" ? $a92479e86a9ffd97d0852d513f6ce34$export$default.propTypes = {
  /**
   * You can wrap a node.
   */
  children: $a92479e86a9ffd97d0852d513f6ce34$import$PropTypes.node.isRequired,

  /**
   * If `true`, the component will not only prevent server-side rendering.
   * It will also defer the rendering of the children into a different screen frame.
   */
  defer: $a92479e86a9ffd97d0852d513f6ce34$import$PropTypes.bool,

  /**
   * The fallback content to display.
   */
  fallback: $a92479e86a9ffd97d0852d513f6ce34$import$PropTypes.node
} : void 0;

if ("production" !== 'production') {
  // eslint-disable-next-line
  $a92479e86a9ffd97d0852d513f6ce34$export$default['propTypes' + ''] = $a92479e86a9ffd97d0852d513f6ce34$import$exactProp($a92479e86a9ffd97d0852d513f6ce34$export$default.propTypes);
}

$a92479e86a9ffd97d0852d513f6ce34$exports.default = $a92479e86a9ffd97d0852d513f6ce34$export$default;