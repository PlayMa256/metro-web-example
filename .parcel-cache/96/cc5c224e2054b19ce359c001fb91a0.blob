var $b657f0e15441085d1a220d381c2c$exports = {};
var $b657f0e15441085d1a220d381c2c$var$memoize = $parcel$require("7873b657f0e15441085d1a220d381c2c", "./memoize");
/** Used as the maximum memoize cache size. */

var $b657f0e15441085d1a220d381c2c$var$MAX_MEMOIZE_SIZE = 500;
/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */

function $b657f0e15441085d1a220d381c2c$var$memoizeCapped(func) {
  var result = $b657f0e15441085d1a220d381c2c$var$memoize(func, function (key) {
    if (cache.size === $b657f0e15441085d1a220d381c2c$var$MAX_MEMOIZE_SIZE) {
      cache.clear();
    }

    return key;
  });
  var cache = result.cache;
  return result;
}

$b657f0e15441085d1a220d381c2c$exports = $b657f0e15441085d1a220d381c2c$var$memoizeCapped;